(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    481196,       9559]
NotebookOptionsPosition[    470563,       9401]
NotebookOutlinePosition[    471116,       9422]
CellTagsIndexPosition[    471073,       9419]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["          ANALYSIS OF EBOLA EPIDERMIC IN WEST AFRICA\n\
                                     VIVIAN J. GOSHASHY",
 FontSize->36]], "Text",
 CellChangeTimes->{{3.851777338189706*^9, 3.8517774119406815`*^9}, {
  3.8517798082477603`*^9, 
  3.85177991290079*^9}},ExpressionUUID->"7ba343f2-8ae2-4fed-a062-\
1f4d06e95fb7"],

Cell[TextData[StyleBox["Importing Ebola Dataset",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.851777424650674*^9, 
  3.851777443449579*^9}},ExpressionUUID->"c31df4fb-613b-4246-b64b-\
a493f947cb91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ebola", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\vivia\\\\Documents\\\\EBOLA\\\\Computer \
program\\\\Ebola from 2014 to 2016.csv\>\"", ",", " ", "\"\<Dataset\>\"", ",",
      " ", 
     RowBox[{"\"\<HeaderLines\>\"", "->", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8517774496484284`*^9, 3.8517775416395807`*^9}, {
   3.851777715759679*^9, 3.8517777366567545`*^9}, {3.85177776822651*^9, 
   3.8517778250506477`*^9}, 3.851791552952649*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"85179af6-167d-46eb-89a7-9c5b2c4279bd"],

Cell[TextData[StyleBox["Replacing missing values in the dataset with 0",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.8517783446837325`*^9, 
  3.8517783572926655`*^9}},ExpressionUUID->"6546e104-644f-425b-b178-\
d37a92f099a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ebola1", "=", 
  RowBox[{
   RowBox[{"Ebola", "[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Country\>\"", ",", "\"\<Date\>\"", ",", " ", "\"\<Days\>\"", ",", 
       "\"\<Number of suspected cases\>\"", ",", " ", 
       "\"\<Number of probable cases\>\"", ",", " ", 
       "\"\<Number of confirmed cases\>\"", ",", 
       "\"\<Number of confirmed, probable and suspected cases\>\"", ",", 
       "\"\<Number of suspected deaths\>\"", ",", 
       "\"\<Number of probable deaths\>\"", ",", 
       "\"\<Number of confirmed deaths\>\"", ",", 
       "\"\<Number of confirmed, probable and suspected deaths\>\""}], 
      "}"}]}], "]"}], "/.", 
   RowBox[{"\"\<\>\"", "->", "0", " "}]}]}]], "Input",
 CellChangeTimes->{{3.8517782742088327`*^9, 3.851778289244376*^9}, {
   3.851778429832204*^9, 3.851778474654339*^9}, {3.851778545602872*^9, 
   3.851778693534956*^9}, {3.851778937040888*^9, 3.8517789423222623`*^9}, {
   3.851778985641339*^9, 3.851778991885147*^9}, 3.8517790841660366`*^9, {
   3.8517795002790723`*^9, 3.851779501941975*^9}, {3.8517899966124616`*^9, 
   3.8517900136191983`*^9}, 3.8528379584708614`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"a322b909-a5f6-46e0-82c3-97cc8fd677a7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          10786268270547962940637580993608280907379489755817493752232], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Country"} -> 1, {All, "Date"} -> 
            1, {All, "Days"} -> 1, {All, "Number of suspected cases"} -> 
            1, {All, "Number of probable cases"} -> 
            1, {All, "Number of confirmed cases"} -> 
            1, {All, "Number of confirmed, probable and suspected cases"} -> 
            1, {All, "Number of suspected deaths"} -> 
            1, {All, "Number of probable deaths"} -> 
            1, {All, "Number of confirmed deaths"} -> 
            1, {All, "Number of confirmed, probable and suspected deaths"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Country" -> TypeSystem`PackageScope`AtomShape[268.8], "Date" -> 
                TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
                "Days" -> TypeSystem`PackageScope`AtomShape[34], 
                "Number of suspected cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of probable cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed, probable and suspected cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of suspected deaths" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of probable deaths" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed deaths" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed, probable and suspected deaths" -> 
                TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{
            "Country", "Date", "Days", "Number of suspected cases", 
             "Number of probable cases", "Number of confirmed cases", 
             "Number of confirmed, probable and suspected cases", 
             "Number of suspected deaths", "Number of probable deaths", 
             "Number of confirmed deaths", 
             "Number of confirmed, probable and suspected deaths"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 2485], "Meta" -> Association[], 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Country"} -> 1, {All, "Date"} -> 
            1, {All, "Days"} -> 1, {All, "Number of suspected cases"} -> 
            1, {All, "Number of probable cases"} -> 
            1, {All, "Number of confirmed cases"} -> 
            1, {All, "Number of confirmed, probable and suspected cases"} -> 
            1, {All, "Number of suspected deaths"} -> 
            1, {All, "Number of probable deaths"} -> 
            1, {All, "Number of confirmed deaths"} -> 
            1, {All, "Number of confirmed, probable and suspected deaths"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Country" -> TypeSystem`PackageScope`AtomShape[268.8], "Date" -> 
                TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
                "Days" -> TypeSystem`PackageScope`AtomShape[34], 
                "Number of suspected cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of probable cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed, probable and suspected cases" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of suspected deaths" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of probable deaths" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed deaths" -> 
                TypeSystem`PackageScope`AtomShape[34], 
                "Number of confirmed, probable and suspected deaths" -> 
                TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Country", "Date", "Days", "Number of suspected cases", 
             "Number of probable cases", "Number of confirmed cases", 
             "Number of confirmed, probable and suspected cases", 
             "Number of suspected deaths", "Number of probable deaths", 
             "Number of confirmed deaths", 
             "Number of confirmed, probable and suspected deaths"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 2485], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
         "DataRowCount" -> 2485, "DataColumnCount" -> 11, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1],
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Country", 
                    Style[
                    "Country", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Country"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Country"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Date", 
                    Style[
                    "Date", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Date"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Date"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Days", 
                    Style[
                    "Days", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Days"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Days"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Number of suspected cases", 
                    Style[
                    "Number of suspected cases", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Number of suspected cases"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Number of suspected cases"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Number of probable cases", 
                    Style[
                    "Number of probable cases", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Number of probable cases"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Number of probable cases"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Number of confirmed cases", 
                    Style[
                    "Number of confirmed cases", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Number of confirmed cases"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Number of confirmed cases"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Number of confirmed, probable and suspected cases", 
                    Style[
                    "Number of confirmed, probable and suspected cases", 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Number of confirmed, probable and suspected cases"},
                     1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Number of confirmed, probable and suspected cases"},
                     "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Number of suspected deaths", 
                    Style[
                    "Number of suspected deaths", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Number of suspected deaths"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Number of suspected deaths"}, "ColumnHeader", True],
                    "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Number of probable deaths", 
                    Style[
                    "Number of probable deaths", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Number of probable deaths"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Number of probable deaths"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Number of confirmed deaths", 
                    Style[
                    "Number of confirmed deaths", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Number of confirmed deaths"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Number of confirmed deaths"}, "ColumnHeader", True],
                    "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["Guinea", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["8/29/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["141"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["482"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["648"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["141"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["287"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Liberia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["8/29/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["382"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["674"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["322"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1378"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["168"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["301"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["225"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Nigeria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["8/29/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["15"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["19"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Sierra Leone", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["8/29/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["54"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["935"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1026"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["34"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["380"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Guinea", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/5/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["56"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["152"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["604"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["812"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["152"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["362"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Liberia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/5/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["369"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["888"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["614"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1871"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["257"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["401"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["431"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Nigeria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/5/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Senegal", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/5/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Sierra Leone", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/5/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["78"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1146"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1261"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["443"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Guinea", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/8/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["47"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["151"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["664"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["862"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["151"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["400"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Liberia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/8/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["443"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["969"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["634"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2046"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["296"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["420"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["508"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Nigeria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/8/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["19"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Senegal", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/8/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Sierra Leone", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/8/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["90"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1234"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1361"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["461"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Guinea", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/12/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["32"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["151"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["678"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["861"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["150"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["403"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Liberia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/12/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["453"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["974"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["654"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2081"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["211"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["428"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["498"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Nigeria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/12/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["19"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["21"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Senegal", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/12/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Sierra Leone", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/12/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["100"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["37"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1287"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1424"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["34"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["478"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Guinea", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{268.8, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["9/16/2014", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Days"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["31"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Number of suspected cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["162"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Number of probable cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["743"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Number of confirmed cases"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["936"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Number of confirmed, probable and suspected cases"]},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Number of suspected deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["162"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Number of probable deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["429"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Number of confirmed deaths"]}, "Item", False], 
                   "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 2485, 1], {1, 2485 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 2485, 1], {1, 2485 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[2485, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[2485, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 2485, 1], {1, 2485 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 2485, 1], {1, 2485 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 11, 1], {1, 11 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[11, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 11, 1], {1, 11 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {700., {232.43650390625, 236.56349609375}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {700., {232.43650390625, 236.56349609375}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10786268270547962940637580993608280907379489755817493752232,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8528381627747087`*^9, 3.854051491799865*^9, 
  3.854109721470358*^9, 3.8543862297310314`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"73e1952b-6286-4c97-864b-f90409a56bef"]
}, Open  ]],

Cell[TextData[StyleBox["Filtering Data by Country",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.8517791027936707`*^9, 
  3.851779119624297*^9}},ExpressionUUID->"43302748-2d3f-4d5b-9334-\
13b3d9e59aa0"],

Cell[TextData[StyleBox["Sierra Leone",
 FontSize->18,
 FontColor->RGBColor[0, 1, 0]]], "Text",
 CellChangeTimes->{{3.851779146132682*^9, 
  3.851779149755232*^9}},ExpressionUUID->"f29d5583-3df9-4db9-b5e6-\
c1ef840a3c17"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SL", " ", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"Ebola1", ",", " ", 
     RowBox[{
      RowBox[{"#Country", " ", "==", " ", "\"\<Sierra Leone\>\""}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851779152198357*^9, 3.8517792050351143`*^9}, {
   3.8517792499659567`*^9, 3.8517793248957043`*^9}, {3.8517793551819954`*^9, 
   3.8517794189733195`*^9}, {3.8517794870918193`*^9, 3.851779488546284*^9}, 
   3.851784147427266*^9, 3.8517879539476776`*^9, 3.8517880030456944`*^9, 
   3.8517890662504807`*^9, {3.85178997699825*^9, 3.8517899783221655`*^9}, 
   3.851791053755378*^9, 3.8517915465669584`*^9, {3.8528379494539595`*^9, 
   3.8528379509354787`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"cd7f2c64-3e29-404c-8811-4092b96b7a59"],

Cell[TextData[StyleBox["Create new datasets ",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.8517840182997894`*^9, 3.8517841000016785`*^9}, {
  3.8518002722404428`*^9, 3.85180027563128*^9}, {3.8518003812841625`*^9, 
  3.8518003838724155`*^9}, {3.8528380773306904`*^9, 
  3.852838087050812*^9}},ExpressionUUID->"8c4a7ab9-9b4d-4afe-a457-\
0334a9a68c42"],

Cell[TextData[StyleBox["Number of confirmed cases Dataset",
 FontSize->24,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.8517841167217336`*^9, 3.8517841187372227`*^9}, {
  3.8517847101336994`*^9, 3.8517847257830505`*^9}, {3.851786386636833*^9, 
  3.8517863884481153`*^9}, {3.8517864851822205`*^9, 3.851786491443098*^9}, {
  3.85178683508109*^9, 3.851786838411366*^9}, {3.85179130144282*^9, 
  3.8517913094667687`*^9}},ExpressionUUID->"c8c8a6d9-e042-4aae-a88c-\
7bf3ae2c6593"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SL1", " ", "=", " ", 
   RowBox[{"SL", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Days\>\"", ",", " ", "\"\<Number of confirmed cases\>\""}],
       "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851784728781624*^9, 3.851784732413643*^9}, {
  3.851786409754093*^9, 3.8517864358836017`*^9}, {3.8517864824151917`*^9, 
  3.851786502931122*^9}, {3.851786828367034*^9, 3.851786851424454*^9}, {
  3.851790032237952*^9, 3.851790033347062*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2cff14ca-7191-4277-8014-fc019974eb06"],

Cell[TextData[StyleBox["Converting SL1 dataset to List",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.8517865236036005`*^9, 
  3.8517865429639196`*^9}},ExpressionUUID->"f9ed35de-7af1-4686-a408-\
ece893628bfa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"SL1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Days\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Susp", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"SL1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "\"\<Number of confirmed cases\>\""}], "]"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SL2", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "Susp"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8517865459354315`*^9, 3.8517866713988657`*^9}, {
   3.8517867054159584`*^9, 3.8517867188241987`*^9}, {3.8517867556427565`*^9, 
   3.851786757500545*^9}, 3.8517868545013676`*^9, {3.8517882965146403`*^9, 
   3.851788301143963*^9}, {3.8517900359197254`*^9, 3.85179003681322*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"cb09a9e2-f188-49a2-9bf9-46a4a07cfed1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"SL2", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Number of confirmed cases\>\"", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Infected People (I)\>\""}], 
      "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Confirmed cases in Sierra Leone\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8517867792192564`*^9, 3.8517867990478573`*^9}, {
   3.851786858224435*^9, 3.851786902206648*^9}, {3.8517884154899173`*^9, 
   3.851788451804632*^9}, 3.8517886346308365`*^9, 3.851790049821718*^9, {
   3.852839844452675*^9, 3.8528398770835238`*^9}, {3.8528399152583475`*^9, 
   3.8528399346516695`*^9}, {3.8528400527722025`*^9, 
   3.8528400856951785`*^9}, {3.852840218725132*^9, 3.852840219626541*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0bdc1782-1603-462e-9ec1-8553e25a3766"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         PointSize[0.01]], 
        PointBox[CompressedData["
1:eJxdzUuIV3UcBfBvCRFtdOFCyMUtIkxisHJqtMf8fJSWlWZlppW3KTOnh65a
2KLfIggEFz4oopAbDj2sqKbMZ/ozsiklK6IHSHihxKHCtE3SgyLPOcQ9/835
fzi/c78XDKxauPzsiBhzVsR/2fn1rUv4c7L/TIyupwM5dyN9LnLiJnocsn2W
Ho8ceo6egGyepyciZ79AV8j6RfpCZF9DX4Q85yX6YmTPFnoScuYQPZl+mb6U
foXu4f41egpyzVb6MuToG/TlyKffpK9ADr9FT0X2vk33Il9/h74SOW+YvgpZ
3qX7kNV79DTkjG30dOTI+/TVyCXb6WuQx3fQ1yJP7KSvQ/bsovuR/bvphFxJ
Z3PMQJ5WT2/ew34mchedzTELOfUD9vQGOmYjh9Wb43rk/L3szXEDcpF6c8xB
Dqqn16ifi1yvnj6k/kbkUfXmuAl5TD19Sv085Pn72NMVHTd3nelL1N+C7FVP
D6q/FfmkenPMRz6lnt6kfgFyhE7mTB+kC31E+9vOZB5TuIfjPDqbC9+PpWNh
18mc6SnawzFd+9u50x7OC7Q3F3qZ9nfAA9rD8YT25sL3z2h/J7xWezg2aM9+
o/bmWITcrD29RXt6SHtz3IXvvao9HFu1Z79Ne/bbtV+M3KE9nHdqby58v1v7
u9Hv0R6Ovdqzlwu9T/sl8Ifaw/GR9uzlwv6A9kuRH2tPj2hPf6I9nD/V/p6u
E31Qe3Mxx71dJ3M2FzgOaX8f+s+0pw9rby7059ovQ36hvTmbizlqfO9LuoLj
K32P/pqu6W/0fXPD732re+y/o1v6iO7fj/ff6745wXFU99n/oPv0j7pvLuaW
Pqb7A8jjug/nUd031+bM/U+6T/+s+/Qvus+9HA90XcFxQvfZ/6r79End5/tT
um8ufC+37H/T/QfR/677cJzWfXNtzuaG/kP3za05luO+XJkTHH/qvjmbG3Mx
t/y+HA91XZkTHH/pvjnzvdyYi7k1x4quK3My1+ZsbszF3JrjYbtvTuYajr91
39yYi7k1x0p8X67MyVzD8Y/us5cbc+H72M/75hjsujInc23O5sZczK05HrH7
5mSuzdncmIu5Ncejdt+czLU5mxtzMbfmeMzum5O5NmdzYy7m1hyP231zMtfm
bG7MxdyaY5XdNydzbc7mxlzMrTlWdz3OXP3vfwEQSqoF
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Infected People (I)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 6228.722222222223}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Number of Confirmed cases in Sierra Leone\"", 
       TraditionalForm], PlotRange -> {{0, 258.}, {6228.722222222223, 8704.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Number of confirmed cases\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.851790050823635*^9, 3.8517963298666573`*^9, 
  3.852401698898259*^9, 3.8524064058120956`*^9, 3.8524112037576046`*^9, 
  3.852411477120946*^9, 3.85241198312961*^9, 3.852413625648243*^9, 
  3.852482514105422*^9, 3.85264049559832*^9, 3.852738071407157*^9, 
  3.8528379264422455`*^9, 3.8528398779220247`*^9, 3.852839935635415*^9, 
  3.8528400548932056`*^9, 3.852840086600791*^9, 3.8528402208340116`*^9, 
  3.8540514939087462`*^9, 3.854109723412794*^9, 3.8543862315903606`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"01d20e9a-74b5-4f7e-8a46-8daa513fa2da"]
}, Open  ]],

Cell[TextData[StyleBox["Number of confirmed deaths Dataset",
 FontSize->24,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.8517913281218643`*^9, 
  3.8517913336611166`*^9}},ExpressionUUID->"28f59219-f133-4627-931d-\
301fa192eb12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SL01", " ", "=", " ", 
   RowBox[{"SL", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Days\>\"", ",", " ", "\"\<Number of confirmed deaths\>\""}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851791353393002*^9, 3.8517913751134944`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"0c8257ea-1e0f-4b97-b5bf-a5d6d25f4c54"],

Cell[TextData[StyleBox["Converting SL01 dataset to List",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{3.851791362885143*^9, 
  3.851802566506984*^9},ExpressionUUID->"648521ed-b98a-4f53-923e-\
dd21b04d3207"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"SL01", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Days\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Susp", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"SL01", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "\"\<Number of confirmed deaths\>\""}], "]"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SL02", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "Susp"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.851791377404172*^9, 3.8517913893880987`*^9}, {
  3.8517914413513775`*^9, 3.8517914442197037`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"cfb57c43-9f40-49c6-8ee0-88653424f573"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot01", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"SL02", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Number of confirmed deaths\>\"", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Removed People (R)\>\""}], "}"}]}],
     ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Confirmed deaths (Removed People) in Sierra \
Leone\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8517913919957304`*^9, 3.8517914147032814`*^9}, {
   3.851791459260063*^9, 3.851791461428952*^9}, 3.8517915012068667`*^9, {
   3.852411893126433*^9, 3.852411915873402*^9}, {3.8528396766313343`*^9, 
   3.852839694033428*^9}, {3.8528397253931327`*^9, 3.85283972877126*^9}, {
   3.8528400611542788`*^9, 3.8528400618576107`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"679a0fe1-183e-46ac-8629-3c1138c511f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.01]], 
        LineBox[CompressedData["
1:eJxdz0uITnEYBvDXJclqFrOQLD6TNElyvzN/jPttjDuD4z7GdUe59LdBuU0T
JaGDwbgsJE2TpH+SLCdZSTrNSpImC8lC4n2edJ5v83y/7+05z3eGbT/UuKuv
mfXrY/Y3S590JPiX3rp/8eQYbJ7dx+GBnsUJuMqzKsLVnrX0YM+Bp+ChnoGu
eDbTNZ699HDPn/QIz47TcK3n2TPwSPTPw6M8Kxfg0Xifi/AYz3gJHovkZ5x4
vPvzOfw+wfMt9yYi+fxJnq30ZM/6VngK/j891fNyGzzNs/0yPN3z6BV4hmfT
VXgm3uc6PMuz4QZc5zn0Fhxwh6PYZnv28A4fv437HM8ncBTbXM9pd3CHv8BW
71nTjrvY5nnu5l1s8z1/8C62BZ5Vd3GHh8C2EP+Pd/g674s8O3kX22LPN7zD
73hfgr17uMM1sC0tO8LjeF/mWc873MX7cs8XvItthWc37/A33hs8Z933DOII
N8AJboFtpWcn+/Br9sUJ7mG/sewgjvDoDvThRthWeTbDAe6CozjBv9lf7Vn9
AH34JBzFCX4K2xrPV+zD39mHf7EvtrWewx+iD2dwhFvgJLZ1nufZh2+yD1c/
Qh8eAdt69OAAz4ejOMFr2d9QdoB3sg8fZF9sGz1Psg9H9uE29uFr7G/C+7Iv
jnDOPnyb/aayA9zOvjiJbXPZQRzFSWxbPDvYhx+yL05i21p2gB+zL05iyzyf
whVxEGfwMz5fnIuTuIA7ub/N8zn3xQF+yX1xhF9xX5zEBfyW+9s9u7kPv+e+
OBNH+AP3xQn+yH2x7Si7An/iPtzDffgr98W5OMHfuC+2nZ4/uQ//4r44E0dx
Dv/mvrgQ266yK+IA932MfXEU5+IkLsS2u+yKOIgzcRTn4iQuxLbHsz/3xUGc
iaM4FydxIbZm2RcHcQYP4L44FydxIba9ZVfEQZyJozgXJ3EhthbPQdwXB3Em
juJcnMSF2PbJvjiIM3EU5+IkLsS2X/bFQZyJozgXJ3EhtgOyLw7iTBzFuTiJ
C7EdlH1xEGfiKM7FSVyI7ZDsi4M4E0dxLk7iQmyHy64SV/77D7OeRM8=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Removed People (R)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Number of Confirmed deaths (Removed People) in Sierra \
Leone\"", TraditionalForm], PlotRange -> {{0, 258.}, {0, 3589.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Number of confirmed deaths\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8517914528384037`*^9, 3.8517914632821302`*^9}, 
   3.8517915034182196`*^9, 3.8517963300247803`*^9, 3.852401710684554*^9, 
   3.85240640616074*^9, 3.852411203904325*^9, 3.85241147729414*^9, 
   3.852411983271866*^9, 3.8524136257797775`*^9, 3.8524825142303925`*^9, 
   3.8526404958507957`*^9, 3.8527380715321255`*^9, 3.8528379266140404`*^9, {
   3.852839681713211*^9, 3.852839695451223*^9}, 3.852839729946042*^9, 
   3.8528399436644354`*^9, 3.852840062653762*^9, 3.854051494111823*^9, 
   3.854109723652667*^9, 3.8543862317153273`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"587068ad-b6d9-4fff-9bd3-8ceb9cef5c0d"]
}, Open  ]],

Cell[TextData[StyleBox["Number of Suspected cases Dataset",
 FontSize->24,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{
  3.851800587711254*^9, {3.851801016112187*^9, 
   3.851801020411161*^9}},ExpressionUUID->"5817b39f-2953-4af3-b779-\
94a60f3500cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SL001", " ", "=", " ", 
   RowBox[{"SL", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Days\>\"", ",", " ", "\"\<Number of suspected cases\>\""}],
       "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851800606261237*^9, 3.8518006135959167`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"14d0684b-ce61-4c00-92f1-53c4a94d0fa5"],

Cell[TextData[StyleBox["Converting SL001 dataset to List",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{
  3.8518006357017865`*^9, {3.8518025600799627`*^9, 
   3.851802560392393*^9}},ExpressionUUID->"63313827-4790-405a-9f16-\
3d78c3b7a229"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"SL001", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Days\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Susp", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"SL001", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "\"\<Number of suspected cases\>\""}], "]"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SL002", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "Susp"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.851800665672121*^9, 3.8518006930580716`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"abebd655-e1fc-486b-b45d-7741b9868474"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot001", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"SL002", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Number of Suspected (Exposed) cases\>\"", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Exposed People (E)\>\""}], "}"}]}],
     ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Suspected cases (Exposed People) in Sierra Leone\>\""}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8518007139690275`*^9, 3.8518007329821186`*^9}, {
   3.851800973233403*^9, 3.851801028332061*^9}, 3.8524109234466743`*^9, {
   3.8528400724097185`*^9, 3.85284007303757*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"7786023e-9c38-46bb-abb8-0d26c080c232"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         PointSize[0.01]], 
        LineBox[CompressedData["
1:eJxd121olXUcxvF/D4Tkm0EhIb24CymJGstsncryn618aJnasqnN7uY2e7Bt
xBijiP4pVErJMJUyrdserKx02TAQX9yMjAgbQQsiJG5CeiERvogyCYn6fS/i
/u3NxYffuc519mLnnF3RPbCi9/wQwgXnhfBv1n/uiZan5/8X6X4cLNNKPI1c
RTZZll34UrwWX0Y+Ql7OfR3OyF7ySstqPZ5lWTyBr7IcfQrPJofIa+gP42vZ
G8HN3J/BLZb5s/h6y9+34TmWna/iGyxHNuG5lt/KN1qefhG3sr8Z32S57BXc
sDwj32x5YhTfYnlUr+dWy916PfMsX96Jb+P5X8O383h5vuXcXThajuLkHO6w
HHyDO27azX0Bz4eTc7jTsrGHO/4VhzbLDeo7h7vIt7g7h7stT+ruHBZaXlRw
xzNxWMTr1R2P6b7Y8rjuzmEJv4/uONvLnb+rjTjhA7q3153whO73Wv6oO97+
NvelluM4OYf7eL2641O6L7Ms3rGMzglP4BL/jMNyy8a79HEnTs4l3o/Dirqj
c8JL3qOPh3DgfWonjvgXnJxLPGMf/Q7LOTjiMZycS/yT+g9YnlEft75PHy/A
pXPgfbUfR1yoj8fVdw4PWk6pj/9WH098SB+fwKHTcuZ++rgZJ+cSd2B9Doyo
j7eoj3ep7xxWW36hPj6pPm77iD7uwGGN5SCOeCNO+LD6+Lj6D9Ud8YUf08ct
uMR9OPC5149jV/2e8Evq463q8zn5m/q48Ql9Z32u9uDwsOUwjviQ+vhL9Z1D
bnkWZ3jaAZ4Pb8U5LnByLvBXuMQ/4Aqfw/peMOMg+84Rz8I5nocTHsIFfhqX
zhX+AIduy0nt4+lj7ONLcO6c8Gxc4BZc4jZc4YU4rKs7w0u1j5drH6/VPu7W
vrO+Zw1oHw9rv8dyk/bxFu07587JucD7tI8Pat9Z3/uOaB8f1T6e1D7+XvvO
BW7+lH3ciivchkOf5SKcOUe8Bue4Cyf8PC7wC9p3rvB27fM9d4f28evax29q
3znhw9rHx7SPv9Y+/kb7j9ad4T+0j89qH198iH3chAvnEl+HK9yMw2OW7TjD
q3B0znGP9vF67eMd2sd7tO8cHrcc1z4+on08pX1cad+5wH9qH4fPeBy+Ggf+
r2ngzDnixTjH7TjhlVj/J63GpXOFe7W/wbJP+/g57ePN2ndOeJv28Zj28efa
x8e0/6TlpPbxd9rHU9rHp7SP/9I+Pqd9PH2cfefQX3fmHJ1z5+RcOJfOlXMY
cPvO0Tl3Ts6Fc+lcOYfBupucs//9D3JJWkQ=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Exposed People (E)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Number of Suspected cases (Exposed People) in Sierra Leone\"",
        TraditionalForm], PlotRange -> {{0, 258.}, {0, 5131.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Number of Suspected (Exposed) cases\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8518007354653053`*^9, 3.851801033241089*^9, 
  3.852401720257346*^9, 3.8524064063790426`*^9, 3.8524109266530066`*^9, 
  3.852411204052479*^9, 3.852411477451745*^9, 3.852411983439246*^9, 
  3.8524136259105544`*^9, 3.852482514492582*^9, 3.85264049612039*^9, 
  3.8527380716794167`*^9, 3.8528379267702913`*^9, 3.8528400736710606`*^9, 
  3.8540514942836585`*^9, 3.8541097239263487`*^9, 3.854386243133662*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"170d975a-b735-477a-bdff-aaef87543e01"]
}, Open  ]],

Cell[TextData[StyleBox["ORDINARY DIFFERENTIAL EQUATION ",
 FontSize->36,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.8524860461092253`*^9, 
  3.852486056566433*^9}},ExpressionUUID->"3637b1ea-6283-45d2-8117-\
d43deb644311"],

Cell[TextData[StyleBox["SIR Model ",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.851788679574005*^9, 3.8517886896818123`*^9}, {
  3.852485994454961*^9, 3.8524860012062373`*^9}, {3.8524860383937774`*^9, 
  3.8524860398271*^9}},ExpressionUUID->"8b8113a9-28ea-41da-921d-62dfc05c4f30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalS]", "\[DirectedEdge]", "\[ScriptCapitalI]"}], 
     ",", 
     RowBox[{"\[ScriptCapitalI]", "\[DirectedEdge]", "\[ScriptCapitalR]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"VertexShapeFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xy", ",", "v", ",", "wh"}], "}"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"v", ",", "Black", ",", "18"}], "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
        "xy"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ScriptCapitalS]", "\[DirectedEdge]", "\[ScriptCapitalI]"}], 
       "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"Style", "[", " ", 
          RowBox[{"\[Alpha]", ",", "Black", ",", "18"}], "]"}], ",", "0.5"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[ScriptCapitalI]", "\[DirectedEdge]", "\[ScriptCapitalR]"}], 
       "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\[Lambda]", ",", "Black", ",", "18"}], "]"}], ",", "0.5"}],
         "]"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.852401791927995*^9, 3.852401804108238*^9}, {
  3.8524109895979023`*^9, 3.852410993003642*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"253871b8-a966-4329-a621-3432367c71cf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`\[ScriptCapitalS], $CellContext`\[ScriptCapitalI], \
$CellContext`\[ScriptCapitalR]}, {{{1, 2}, {2, 3}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[$CellContext`\[ScriptCapitalI], $CellContext`\
\[ScriptCapitalR]] -> Placed[
           Style[$CellContext`\[Lambda], 
            GrayLevel[0], 18], 0.5], 
         DirectedEdge[$CellContext`\[ScriptCapitalS], $CellContext`\
\[ScriptCapitalI]] -> Placed[
           Style[$CellContext`\[Alpha], 
            GrayLevel[0], 18], 0.5]}, ImageSize -> 450, PerformanceGoal -> 
       "Quality", VertexShapeFunction -> {
         Function[{$CellContext`xy, $CellContext`v, $CellContext`wh}, 
          Inset[
           Framed[
            Style[$CellContext`v, Black, 18], Background -> 
            LightBlue], $CellContext`xy]]}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[
         ArrowBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$2", Automatic, Center]}], "DynamicName", 
         BoxID -> "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["\[Alpha]", 
           GrayLevel[0], 18, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 2}, 
          DynamicLocation["EdgeLabelID$1", Automatic, 
           Scaled[0.5]]], 
         ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
        TagBox[
         ArrowBox[{
           DynamicLocation["VertexID$2", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], "DynamicName", 
         BoxID -> "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["\[Lambda]", 
           GrayLevel[0], 18, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 2}, 
          DynamicLocation["EdgeLabelID$2", Automatic, 
           Scaled[0.5]]], 
         ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         BoxData[
          FormBox[
           FrameBox[
            StyleBox["\[ScriptCapitalS]", 
             GrayLevel[0], 18, StripOnInput -> False], Background -> 
            RGBColor[0.87, 0.94, 1], StripOnInput -> False], 
           TraditionalForm]], {0., 3.6739403974420594`*^-16}], "DynamicName", 
        BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         BoxData[
          FormBox[
           FrameBox[
            StyleBox["\[ScriptCapitalI]", 
             GrayLevel[0], 18, StripOnInput -> False], Background -> 
            RGBColor[0.87, 0.94, 1], StripOnInput -> False], 
           TraditionalForm]], {1., 2.4492935982947064`*^-16}], "DynamicName", 
        BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         BoxData[
          FormBox[
           FrameBox[
            StyleBox["\[ScriptCapitalR]", 
             GrayLevel[0], 18, StripOnInput -> False], Background -> 
            RGBColor[0.87, 0.94, 1], StripOnInput -> False], 
           TraditionalForm]], {2., 0.}], "DynamicName", BoxID -> 
        "VertexID$3"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-1.4142135623731082`, 
       325.4142135623731}, {-16.712963562373155`, 14.414213562373106`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->450]], "Output",
 CellChangeTimes->{3.8524018145772133`*^9, 3.852406406492385*^9, 
  3.852411204160263*^9, 3.8524114777200933`*^9, 3.8524119835183787`*^9, 
  3.852413625976717*^9, 3.85248251461047*^9, 3.852640496290554*^9, 
  3.8527380719562583`*^9, 3.8528379273642373`*^9, 3.854051494424266*^9, 
  3.8541097240520334`*^9, 3.8543862434557056`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"6bd855e1-6fe6-456f-97a9-2daf784ba2c2"]
}, Open  ]],

Cell[TextData[StyleBox["Estimating parameters using the number of confirmed \
cases dataset",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.851791184403371*^9, 
  3.851791231239162*^9}},ExpressionUUID->"6748380c-018e-4ab7-9d58-\
9f94569ec7eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymodel", "[", 
   RowBox[{
    RowBox[{"alpha_", "?", "NumberQ"}], ",", 
    RowBox[{"lambda_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "I1", ",", "R1", ",", "t"}], "}"}], ",", 
    RowBox[{"First", "[", 
     RowBox[{"I1", "/.", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", "alpha"}], "*", 
            RowBox[{"S", "[", "t", "]"}], "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"I1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"alpha", "*", 
             RowBox[{"S", "[", "t", "]"}], "*", 
             RowBox[{"I1", "[", "t", "]"}]}], "-", 
            RowBox[{"lambda", "*", 
             RowBox[{"I1", "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"R1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"lambda", "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"S", "[", "0", "]"}], "\[Equal]", "9000"}], ",", 
          RowBox[{
           RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "1000"}], ",", 
          RowBox[{
           RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", "I1", ",", "R1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "258"}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"myfit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"SL2", ",", 
     RowBox[{
      RowBox[{"mymodel", "[", 
       RowBox[{"alpha", ",", "lambda"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"alpha", ",", "0.000005"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"lambda", ",", "0.0000001"}], "}"}]}], "}"}], ",", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"myfit", "[", "\"\<EstimatedVariance\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"myfit", "[", "\"\<ParameterTable\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotfit1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"myfit", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "258"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Fitted Model\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Infected People (I)\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Ebola Epidermic Fitted Model of Infected Individuals in Sierra \
Leone\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"plotfit1", ",", "plot1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.851788691180067*^9, 3.8517887177027955`*^9}, {
   3.8517900792742023`*^9, 3.8517901367532043`*^9}, 3.851790205197647*^9, {
   3.8517902484225745`*^9, 3.8517902559245234`*^9}, {3.8517904060140457`*^9, 
   3.851790407859888*^9}, {3.851790529563098*^9, 3.851790580991418*^9}, {
   3.8517906300820947`*^9, 3.85179066691632*^9}, {3.8517906978589897`*^9, 
   3.851790700059732*^9}, {3.8517907372091722`*^9, 3.851790737718144*^9}, {
   3.851790768582282*^9, 3.8517907769614143`*^9}, {3.851790808162319*^9, 
   3.851790811173665*^9}, {3.8517908426482706`*^9, 3.8517908489467344`*^9}, {
   3.8517995989753356`*^9, 3.851799623241584*^9}, {3.8518025864889393`*^9, 
   3.851802587501935*^9}, {3.852401868954717*^9, 3.852401876559746*^9}, {
   3.8524020712842436`*^9, 3.852402071823514*^9}, {3.8524023935134745`*^9, 
   3.852402393915615*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c58b79aa-d760-49cc-af7b-58aee72ba622"],

Cell[BoxData["345323.21347378305`"], "Output",
 CellChangeTimes->{3.8517887278803015`*^9, 3.851790084780221*^9, 
  3.8517901614139395`*^9, 3.8517902311344585`*^9, 3.8517903280946703`*^9, 
  3.8517904757548313`*^9, 3.8517906103984976`*^9, 3.8517906912581244`*^9, 
  3.85179072141933*^9, 3.8517907610145235`*^9, 3.8517907997942805`*^9, 
  3.8517908331993427`*^9, 3.8517908695461903`*^9, 3.851796357929986*^9, 
  3.852401905022441*^9, 3.8524023792497854`*^9, 3.8524024155627184`*^9, 
  3.8524064439188156`*^9, 3.8524112263757153`*^9, 3.8524114984664097`*^9, 
  3.8524120065088463`*^9, 3.85241364986042*^9, 3.8524825366528635`*^9, 
  3.852640522457862*^9, 3.8527380937137794`*^9, 3.85283795190224*^9, 
  3.8528401991191726`*^9, 3.8528402493496437`*^9, 3.854051523125631*^9, 
  3.85410974793824*^9, 3.8543862649922934`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"fbadaad0-3544-4e5a-9291-95cf8cf1012c"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"alpha", "8.629301146109929`*^-6", "1.4999986772985175`*^-7", 
      "57.528725036286126`", "8.415742416933013`*^-149"},
     {"lambda", "0.0009439239808174919`", "0.000034006100468402463`", 
      "27.757489621444844`", "2.6431581567136908`*^-79"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.8517887278803015`*^9, 3.851790084780221*^9, 
  3.8517901614139395`*^9, 3.8517902311344585`*^9, 3.8517903280946703`*^9, 
  3.8517904757548313`*^9, 3.8517906103984976`*^9, 3.8517906912581244`*^9, 
  3.85179072141933*^9, 3.8517907610145235`*^9, 3.8517907997942805`*^9, 
  3.8517908331993427`*^9, 3.8517908695461903`*^9, 3.851796357929986*^9, 
  3.852401905022441*^9, 3.8524023792497854`*^9, 3.8524024155627184`*^9, 
  3.8524064439188156`*^9, 3.8524112263757153`*^9, 3.8524114984664097`*^9, 
  3.8524120065088463`*^9, 3.85241364986042*^9, 3.8524825366528635`*^9, 
  3.852640522457862*^9, 3.8527380937137794`*^9, 3.85283795190224*^9, 
  3.8528401991191726`*^9, 3.8528402493496437`*^9, 3.854051523125631*^9, 
  3.85410974793824*^9, 3.8543862662573457`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"2ceb7729-40c5-4277-a90d-aae9ada8fb22"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$348898#1"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.01]], 
         PointBox[CompressedData["
1:eJxdzUuIV3UcBfBvCRFtdOFCyMUtIkxisHJqtMf8fJSWlWZlppW3KTOnh65a
2KLfIggEFz4oopAbDj2sqKbMZ/ozsiklK6IHSHihxKHCtE3SgyLPOcQ9/835
fzi/c78XDKxauPzsiBhzVsR/2fn1rUv4c7L/TIyupwM5dyN9LnLiJnocsn2W
Ho8ceo6egGyepyciZ79AV8j6RfpCZF9DX4Q85yX6YmTPFnoScuYQPZl+mb6U
foXu4f41egpyzVb6MuToG/TlyKffpK9ADr9FT0X2vk33Il9/h74SOW+YvgpZ
3qX7kNV79DTkjG30dOTI+/TVyCXb6WuQx3fQ1yJP7KSvQ/bsovuR/bvphFxJ
Z3PMQJ5WT2/ew34mchedzTELOfUD9vQGOmYjh9Wb43rk/L3szXEDcpF6c8xB
Dqqn16ifi1yvnj6k/kbkUfXmuAl5TD19Sv085Pn72NMVHTd3nelL1N+C7FVP
D6q/FfmkenPMRz6lnt6kfgFyhE7mTB+kC31E+9vOZB5TuIfjPDqbC9+PpWNh
18mc6SnawzFd+9u50x7OC7Q3F3qZ9nfAA9rD8YT25sL3z2h/J7xWezg2aM9+
o/bmWITcrD29RXt6SHtz3IXvvao9HFu1Z79Ne/bbtV+M3KE9nHdqby58v1v7
u9Hv0R6Ovdqzlwu9T/sl8Ifaw/GR9uzlwv6A9kuRH2tPj2hPf6I9nD/V/p6u
E31Qe3Mxx71dJ3M2FzgOaX8f+s+0pw9rby7059ovQ36hvTmbizlqfO9LuoLj
K32P/pqu6W/0fXPD732re+y/o1v6iO7fj/ff6745wXFU99n/oPv0j7pvLuaW
Pqb7A8jjug/nUd031+bM/U+6T/+s+/Qvus+9HA90XcFxQvfZ/6r79End5/tT
um8ufC+37H/T/QfR/677cJzWfXNtzuaG/kP3za05luO+XJkTHH/qvjmbG3Mx
t/y+HA91XZkTHH/pvjnzvdyYi7k1x4quK3My1+ZsbszF3JrjYbtvTuYajr91
39yYi7k1x0p8X67MyVzD8Y/us5cbc+H72M/75hjsujInc23O5sZczK05HrH7
5mSuzdncmIu5Ncejdt+czLU5mxtzMbfmeMzum5O5NmdzYy7m1hyP231zMtfm
bG7MxdyaY5XdNydzbc7mxlzMrTlWdz3OXP3vfwEQSqoF
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Infected People (I)\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Ebola Epidermic Fitted Model of Infected Individuals in \
Sierra Leone\"", TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Fitted Model\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Number of confirmed cases\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8517887278803015`*^9, 3.851790084780221*^9, 
  3.8517901614139395`*^9, 3.8517902311344585`*^9, 3.8517903280946703`*^9, 
  3.8517904757548313`*^9, 3.8517906103984976`*^9, 3.8517906912581244`*^9, 
  3.85179072141933*^9, 3.8517907610145235`*^9, 3.8517907997942805`*^9, 
  3.8517908331993427`*^9, 3.8517908695461903`*^9, 3.851796357929986*^9, 
  3.852401905022441*^9, 3.8524023792497854`*^9, 3.8524024155627184`*^9, 
  3.8524064439188156`*^9, 3.8524112263757153`*^9, 3.8524114984664097`*^9, 
  3.8524120065088463`*^9, 3.85241364986042*^9, 3.8524825366528635`*^9, 
  3.852640522457862*^9, 3.8527380937137794`*^9, 3.85283795190224*^9, 
  3.8528401991191726`*^9, 3.8528402493496437`*^9, 3.854051523125631*^9, 
  3.85410974793824*^9, 3.8543862670540323`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"92225a3b-a77e-45a7-9da2-ac7ec2c61ee1"]
}, Open  ]],

Cell[TextData[StyleBox["Obtain the residuals and plot them for each data \
point",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.852406744834407*^9},ExpressionUUID->"e63ac284-f9a1-4773-884a-\
e3f44843a34f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"myfit", "[", "\"\<FitResiduals\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.852406694334654*^9, 3.8524066976644135`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"f67706de-4acb-4a7e-af4b-bae3a95d3527"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-1174.8662406583571`, 1011.8402353283882`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8524066988232956`*^9, 3.8524112282264986`*^9, 
  3.852411500577539*^9, 3.852412008199873*^9, 3.8524136515114937`*^9, 
  3.85248253912994*^9, 3.8526405264785647`*^9, 3.852738096643757*^9, 
  3.8528379550447435`*^9, 3.854051526375699*^9, 3.854109750121299*^9, 
  3.8543862685380635`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f99e73e4-b0d3-4999-9546-0db0db2e21bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myfit", "[", "\"\<FitResiduals\>\"", "]"}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Filling", "->", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.8524835262237*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"4d944470-fa79-4131-b25f-f99fd2a52e6e"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
7/KwAw==
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{260, 1}], LineBox[{301, 42}], LineBox[{302, 43}], 
       LineBox[{303, 44}], LineBox[{304, 45}], LineBox[{305, 46}], 
       LineBox[{306, 47}], LineBox[{307, 48}], LineBox[{308, 49}], 
       LineBox[{309, 50}], LineBox[{310, 51}], LineBox[{311, 52}], 
       LineBox[{312, 53}], LineBox[{313, 54}], LineBox[{314, 55}], 
       LineBox[{315, 56}], LineBox[{316, 57}], LineBox[{317, 58}], 
       LineBox[{318, 59}], LineBox[{319, 60}], LineBox[{320, 61}], 
       LineBox[{321, 62}], LineBox[{322, 63}], LineBox[{323, 64}], 
       LineBox[{324, 65}], LineBox[{325, 66}], LineBox[{326, 67}], 
       LineBox[{327, 68}], LineBox[{328, 69}], LineBox[{329, 70}], 
       LineBox[{330, 71}], LineBox[{331, 72}], LineBox[{332, 73}], 
       LineBox[{333, 74}], LineBox[{334, 75}], LineBox[{335, 76}], 
       LineBox[{336, 77}], LineBox[{337, 78}], LineBox[{338, 79}], 
       LineBox[{339, 80}], LineBox[{340, 81}], LineBox[{341, 82}], 
       LineBox[{342, 83}], LineBox[{343, 84}], LineBox[{344, 85}], 
       LineBox[{345, 86}], LineBox[{346, 87}], LineBox[{347, 88}], 
       LineBox[{348, 89}], LineBox[{349, 90}], LineBox[{350, 91}], 
       LineBox[{351, 92}], LineBox[{352, 93}], LineBox[{353, 94}], 
       LineBox[{354, 95}], LineBox[{355, 96}], LineBox[{356, 97}], 
       LineBox[{357, 98}], LineBox[{358, 99}], LineBox[{359, 100}], 
       LineBox[{360, 101}], LineBox[{361, 102}], LineBox[{362, 103}], 
       LineBox[{363, 104}], LineBox[{364, 105}], LineBox[{365, 106}], 
       LineBox[{366, 107}], LineBox[{367, 108}], LineBox[{368, 109}], 
       LineBox[{369, 110}], LineBox[{370, 111}], LineBox[{371, 112}], 
       LineBox[{372, 113}], LineBox[{373, 114}], LineBox[{374, 115}], 
       LineBox[{375, 116}], LineBox[{376, 117}], LineBox[{377, 118}], 
       LineBox[{378, 119}], LineBox[{379, 120}], LineBox[{380, 121}], 
       LineBox[{381, 122}], LineBox[{382, 123}], LineBox[{383, 124}], 
       LineBox[{384, 125}], LineBox[{385, 126}], LineBox[{386, 127}], 
       LineBox[{387, 128}], LineBox[{388, 129}], LineBox[{389, 130}], 
       LineBox[{390, 131}], LineBox[{391, 132}], LineBox[{392, 133}], 
       LineBox[{393, 134}], LineBox[{394, 135}], LineBox[{395, 136}], 
       LineBox[{396, 137}], LineBox[{397, 138}], LineBox[{398, 139}], 
       LineBox[{399, 140}], LineBox[{400, 141}], LineBox[{401, 142}], 
       LineBox[{402, 143}], LineBox[{403, 144}], LineBox[{404, 145}], 
       LineBox[{405, 146}], LineBox[{406, 147}], LineBox[{407, 148}], 
       LineBox[{408, 149}], LineBox[{409, 150}], LineBox[{410, 151}], 
       LineBox[{411, 152}], LineBox[{412, 153}], LineBox[{413, 154}], 
       LineBox[{414, 155}], LineBox[{415, 156}], LineBox[{416, 157}], 
       LineBox[{417, 158}], LineBox[{418, 159}], LineBox[{419, 160}], 
       LineBox[{420, 161}], LineBox[{421, 162}], LineBox[{422, 163}], 
       LineBox[{423, 164}], LineBox[{424, 165}], LineBox[{425, 166}], 
       LineBox[{426, 167}], LineBox[{427, 168}], LineBox[{428, 169}], 
       LineBox[{429, 170}], LineBox[{430, 171}], LineBox[{431, 172}], 
       LineBox[{432, 173}], LineBox[{433, 174}], LineBox[{434, 175}], 
       LineBox[{435, 176}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{261, 2}], LineBox[{262, 3}], LineBox[{263, 4}], 
       LineBox[{264, 5}], LineBox[{265, 6}], LineBox[{266, 7}], 
       LineBox[{267, 8}], LineBox[{268, 9}], LineBox[{269, 10}], 
       LineBox[{270, 11}], LineBox[{271, 12}], LineBox[{272, 13}], 
       LineBox[{273, 14}], LineBox[{274, 15}], LineBox[{275, 16}], 
       LineBox[{276, 17}], LineBox[{277, 18}], LineBox[{278, 19}], 
       LineBox[{279, 20}], LineBox[{280, 21}], LineBox[{281, 22}], 
       LineBox[{282, 23}], LineBox[{283, 24}], LineBox[{284, 25}], 
       LineBox[{285, 26}], LineBox[{286, 27}], LineBox[{287, 28}], 
       LineBox[{288, 29}], LineBox[{289, 30}], LineBox[{290, 31}], 
       LineBox[{291, 32}], LineBox[{292, 33}], LineBox[{293, 34}], 
       LineBox[{294, 35}], LineBox[{295, 36}], LineBox[{296, 37}], 
       LineBox[{297, 38}], LineBox[{298, 39}], LineBox[{299, 40}], 
       LineBox[{300, 41}], LineBox[{436, 177}], LineBox[{437, 178}], 
       LineBox[{438, 179}], LineBox[{439, 180}], LineBox[{440, 181}], 
       LineBox[{441, 182}], LineBox[{442, 183}], LineBox[{443, 184}], 
       LineBox[{444, 185}], LineBox[{445, 186}], LineBox[{446, 187}], 
       LineBox[{447, 188}], LineBox[{448, 189}], LineBox[{449, 190}], 
       LineBox[{450, 191}], LineBox[{451, 192}], LineBox[{452, 193}], 
       LineBox[{453, 194}], LineBox[{454, 195}], LineBox[{455, 196}], 
       LineBox[{456, 197}], LineBox[{457, 198}], LineBox[{458, 199}], 
       LineBox[{459, 200}], LineBox[{460, 201}], LineBox[{461, 202}], 
       LineBox[{462, 203}], LineBox[{463, 204}], LineBox[{464, 205}], 
       LineBox[{465, 206}], LineBox[{466, 207}], LineBox[{467, 208}], 
       LineBox[{468, 209}], LineBox[{469, 210}], LineBox[{470, 211}], 
       LineBox[{471, 212}], LineBox[{472, 213}], LineBox[{473, 214}], 
       LineBox[{474, 215}], LineBox[{475, 216}], LineBox[{476, 217}], 
       LineBox[{477, 218}], LineBox[{478, 219}], LineBox[{479, 220}], 
       LineBox[{480, 221}], LineBox[{481, 222}], LineBox[{482, 223}], 
       LineBox[{483, 224}], LineBox[{484, 225}], LineBox[{485, 226}], 
       LineBox[{486, 227}], LineBox[{487, 228}], LineBox[{488, 229}], 
       LineBox[{489, 230}], LineBox[{490, 231}], LineBox[{491, 232}], 
       LineBox[{492, 233}], LineBox[{493, 234}], LineBox[{494, 235}], 
       LineBox[{495, 236}], LineBox[{496, 237}], LineBox[{497, 238}], 
       LineBox[{498, 239}], LineBox[{499, 240}], LineBox[{500, 241}], 
       LineBox[{501, 242}], LineBox[{502, 243}], LineBox[{503, 244}], 
       LineBox[{504, 245}], LineBox[{505, 246}], LineBox[{506, 247}], 
       LineBox[{507, 248}], LineBox[{508, 249}], LineBox[{509, 250}], 
       LineBox[{510, 251}], LineBox[{511, 252}], LineBox[{512, 253}], 
       LineBox[{513, 254}], LineBox[{514, 255}], LineBox[{515, 256}], 
       LineBox[{516, 257}], LineBox[{517, 258}], LineBox[{518, 259}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwV01VjFgQAQNFvG7DRSIkgMZAuAQmluwTpzlEqsBHS3R1KS0l3d3e3CKJ0
Y9DdHB7O/Qc3PCKqWmRQIBAIkdDgQCCMmMQiNnGISzzik4BPSEgiEpOEpHxK
Mj4jOSn4nJSkIjVpCCct6fiC9GQgI5nITBayko3s5CAnX5KL3OThK/KSj/wU
4Gu+oSCFKEwRilKM4pSgJKUoTRnKUo7yVKAi31KJynxHFapSjerUoCa1qE0d
6lKP+jSgIY1oTBOaEkEzmtOClrTie37gR1rThrZEEkU72tOBjvxEJzrTha50
ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrH8zC+MYzwTmMgkJjOF
X5nKNKYzg5n8xixmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySl+5zR/cIaz/Mk5/uJv
znOBi1ziMle4yjWuc4Ob3OI2d/iHf/mP/7nLPe7zgIc84jFPeMoznvOCl7zi
NW94yzveB38cPRAIIpgQohGdGIQSRkw+AHBbg2A=
       "]]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-1174.8662406583571`, 1011.8402353283882`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8524835272386417`*^9, 3.8526405267308307`*^9, 
  3.8527380968271217`*^9, 3.8528379552009535`*^9, 3.854051526552227*^9, 
  3.8541097502476053`*^9, 3.8543862686942744`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"ca11fb31-cb77-4262-b882-e6456817ce1b"]
}, Open  ]],

Cell[TextData[StyleBox["Estimating parameters using the number of confirmed \
deaths dataset",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{{3.8517914812961397`*^9, 
  3.8517914890350966`*^9}},ExpressionUUID->"7e73e031-765c-4d5f-be61-\
2fcb0f176062"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymodel", "[", 
   RowBox[{
    RowBox[{"alpha_", "?", "NumberQ"}], ",", 
    RowBox[{"lambda_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "I1", ",", "R1", ",", "t"}], "}"}], ",", 
    RowBox[{"First", "[", 
     RowBox[{"I1", "/.", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", "alpha"}], "*", 
            RowBox[{"S", "[", "t", "]"}], "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"I1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"alpha", "*", 
             RowBox[{"S", "[", "t", "]"}], "*", 
             RowBox[{"I1", "[", "t", "]"}]}], "-", 
            RowBox[{"lambda", "*", 
             RowBox[{"I1", "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"R1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"lambda", "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"S", "[", "0", "]"}], "\[Equal]", "2000"}], ",", 
          RowBox[{
           RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "250"}], ",", 
          RowBox[{
           RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", "I1", ",", "R1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "258"}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"myfit1", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"SL02", ",", 
     RowBox[{
      RowBox[{"mymodel", "[", 
       RowBox[{"alpha", ",", "lambda"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"alpha", ",", "0.000005"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"lambda", ",", "0.0000001"}], "}"}]}], "}"}], ",", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"myfit1", "[", "\"\<EstimatedVariance\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"myfit1", "[", "\"\<ParameterTable\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"plotfit01", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"myfit1", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "258"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Fitted Model\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Removed People (R)\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Ebola Epidermic Fitted Model of Removed People in Sierra \
Leone\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"plotfit01", ",", "plot01"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8517915116024632`*^9, 3.8517915230189114`*^9}, {
   3.8517916051096816`*^9, 3.8517916338056965`*^9}, {3.8517916842253413`*^9, 
   3.851791684642232*^9}, {3.8517917193847904`*^9, 3.851791719666026*^9}, {
   3.8517917527134786`*^9, 3.8517917582998867`*^9}, {3.851791788828042*^9, 
   3.851791789460146*^9}, {3.851791837711405*^9, 3.851791842850339*^9}, {
   3.8524019249859943`*^9, 3.8524019290190163`*^9}, {3.85240198643295*^9, 
   3.8524019908429713`*^9}, {3.852402046639023*^9, 3.8524020471467896`*^9}, {
   3.852402094146127*^9, 3.8524020962453575`*^9}, 3.8524021512593045`*^9, {
   3.852402217658373*^9, 3.8524022189700346`*^9}, {3.8524022701984873`*^9, 
   3.8524022741078854`*^9}, {3.8524023121597233`*^9, 
   3.8524023124740148`*^9}, {3.8524024896641808`*^9, 
   3.8524024948899813`*^9}, {3.8524108149053392`*^9, 3.852410840950616*^9}, {
   3.85241318009842*^9, 3.852413181958672*^9}, {3.8524132145592594`*^9, 
   3.852413215344966*^9}, {3.852413257518876*^9, 3.8524132583237906`*^9}, {
   3.852413301071828*^9, 3.8524133083440757`*^9}, {3.8524134327218943`*^9, 
   3.8524134333410463`*^9}, {3.852413493250907*^9, 3.8524134940677724`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"488fd2c9-3b8d-4652-870b-90f27e342a8b"],

Cell[BoxData["186680.51944461506`"], "Output",
 CellChangeTimes->{3.851791534178017*^9, 3.851791621222376*^9, 
  3.851791652619424*^9, 3.8517917012219744`*^9, 3.8517917375670385`*^9, 
  3.851791776707761*^9, 3.85179180814913*^9, 3.8517963843113213`*^9, 
  3.852401954981234*^9, 3.8524020293950653`*^9, 3.8524020821711407`*^9, 
  3.852402129736886*^9, 3.8524022017982607`*^9, 3.8524022479677935`*^9, 
  3.8524023036573086`*^9, 3.8524023400615077`*^9, 3.852402530008914*^9, 
  3.852406495409498*^9, 3.8524112577567596`*^9, 3.852411530809534*^9, 
  3.852412039378378*^9, 3.852413201066489*^9, 3.852413249269787*^9, 
  3.852413288876771*^9, 3.8524133362206726`*^9, 3.8524134139534874`*^9, 
  3.852413463500811*^9, 3.8524135229055357`*^9, 3.852413678958011*^9, 
  3.8524825660334015`*^9, 3.852640567935013*^9, 3.852738123644785*^9, 
  3.8528379863070345`*^9, 3.8528402975585794`*^9, 3.8540515585089464`*^9, 
  3.85410978060408*^9, 3.8543862981508813`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"b43b947c-8136-4574-b6a6-3fdee6c6859b"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"alpha", "0.000052571025206773404`", "3.4841035820650063`*^-6", 
      "15.0888238447879`", "2.8511801851458657`*^-37"},
     {"lambda", 
      RowBox[{"-", "0.002630933687660181`"}], "0.000057638346051472294`", 
      RowBox[{"-", "45.64554446636446`"}], "2.763580921981164`*^-125"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.851791534178017*^9, 3.851791621222376*^9, 
  3.851791652619424*^9, 3.8517917012219744`*^9, 3.8517917375670385`*^9, 
  3.851791776707761*^9, 3.85179180814913*^9, 3.8517963843113213`*^9, 
  3.852401954981234*^9, 3.8524020293950653`*^9, 3.8524020821711407`*^9, 
  3.852402129736886*^9, 3.8524022017982607`*^9, 3.8524022479677935`*^9, 
  3.8524023036573086`*^9, 3.8524023400615077`*^9, 3.852402530008914*^9, 
  3.852406495409498*^9, 3.8524112577567596`*^9, 3.852411530809534*^9, 
  3.852412039378378*^9, 3.852413201066489*^9, 3.852413249269787*^9, 
  3.852413288876771*^9, 3.8524133362206726`*^9, 3.8524134139534874`*^9, 
  3.852413463500811*^9, 3.8524135229055357`*^9, 3.852413678958011*^9, 
  3.8524825660334015`*^9, 3.852640567935013*^9, 3.852738123644785*^9, 
  3.8528379863070345`*^9, 3.8528402975585794`*^9, 3.8540515585089464`*^9, 
  3.85410978060408*^9, 3.8543862991598015`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"60fd3ea2-23c9-43f3-9970-2eb65f6c87db"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
HwZVzIk=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$793651#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.01]], 
         LineBox[CompressedData["
1:eJxdz0uITnEYBvDXJclqFrOQLD6TNElyvzN/jPttjDuD4z7GdUe59LdBuU0T
JaGDwbgsJE2TpH+SLCdZSTrNSpImC8lC4n2edJ5v83y/7+05z3eGbT/UuKuv
mfXrY/Y3S590JPiX3rp/8eQYbJ7dx+GBnsUJuMqzKsLVnrX0YM+Bp+ChnoGu
eDbTNZ699HDPn/QIz47TcK3n2TPwSPTPw6M8Kxfg0Xifi/AYz3gJHovkZ5x4
vPvzOfw+wfMt9yYi+fxJnq30ZM/6VngK/j891fNyGzzNs/0yPN3z6BV4hmfT
VXgm3uc6PMuz4QZc5zn0Fhxwh6PYZnv28A4fv437HM8ncBTbXM9pd3CHv8BW
71nTjrvY5nnu5l1s8z1/8C62BZ5Vd3GHh8C2EP+Pd/g674s8O3kX22LPN7zD
73hfgr17uMM1sC0tO8LjeF/mWc873MX7cs8XvItthWc37/A33hs8Z933DOII
N8AJboFtpWcn+/Br9sUJ7mG/sewgjvDoDvThRthWeTbDAe6CozjBv9lf7Vn9
AH34JBzFCX4K2xrPV+zD39mHf7EvtrWewx+iD2dwhFvgJLZ1nufZh2+yD1c/
Qh8eAdt69OAAz4ejOMFr2d9QdoB3sg8fZF9sGz1Psg9H9uE29uFr7G/C+7Iv
jnDOPnyb/aayA9zOvjiJbXPZQRzFSWxbPDvYhx+yL05i21p2gB+zL05iyzyf
whVxEGfwMz5fnIuTuIA7ub/N8zn3xQF+yX1xhF9xX5zEBfyW+9s9u7kPv+e+
OBNH+AP3xQn+yH2x7Si7An/iPtzDffgr98W5OMHfuC+2nZ4/uQ//4r44E0dx
Dv/mvrgQ266yK+IA932MfXEU5+IkLsS2u+yKOIgzcRTn4iQuxLbHsz/3xUGc
iaM4FydxIbZm2RcHcQYP4L44FydxIba9ZVfEQZyJozgXJ3EhthbPQdwXB3Em
juJcnMSF2PbJvjiIM3EU5+IkLsS2X/bFQZyJozgXJ3EhtgOyLw7iTBzFuTiJ
C7EdlH1xEGfiKM7FSVyI7ZDsi4M4E0dxLk7iQmyHy64SV/77D7OeRM8=
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Removed People (R)\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Ebola Epidermic Fitted Model of Removed People in Sierra \
Leone\"", TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Fitted Model\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Number of confirmed deaths\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.851791534178017*^9, 3.851791621222376*^9, 
  3.851791652619424*^9, 3.8517917012219744`*^9, 3.8517917375670385`*^9, 
  3.851791776707761*^9, 3.85179180814913*^9, 3.8517963843113213`*^9, 
  3.852401954981234*^9, 3.8524020293950653`*^9, 3.8524020821711407`*^9, 
  3.852402129736886*^9, 3.8524022017982607`*^9, 3.8524022479677935`*^9, 
  3.8524023036573086`*^9, 3.8524023400615077`*^9, 3.852402530008914*^9, 
  3.852406495409498*^9, 3.8524112577567596`*^9, 3.852411530809534*^9, 
  3.852412039378378*^9, 3.852413201066489*^9, 3.852413249269787*^9, 
  3.852413288876771*^9, 3.8524133362206726`*^9, 3.8524134139534874`*^9, 
  3.852413463500811*^9, 3.8524135229055357`*^9, 3.852413678958011*^9, 
  3.8524825660334015`*^9, 3.852640567935013*^9, 3.852738123644785*^9, 
  3.8528379863070345`*^9, 3.8528402975585794`*^9, 3.8540515585089464`*^9, 
  3.85410978060408*^9, 3.8543862995799074`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"4c2df3e6-1ecf-485d-84d6-8ec9b5fd3f7b"]
}, Open  ]],

Cell[TextData[StyleBox["Obtain the residuals and plot them for each data \
point",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.8524067346738825`*^9},ExpressionUUID->"e9842f8c-9d2e-41fe-8862-\
7d461d5abffa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"myfit1", "[", "\"\<FitResiduals\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.8524835448967915`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"d2048aa8-7268-4985-a131-178e41fe5c8e"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
92MpPw66u6ePPP6e5l9pHAy8x7UdPyDMQ3FQP/U7eiJfRvlxaDVbu6s7LIby
+fs3F05IsqV5WBsHrbuxz3KLKMqPB1ufUGb1IJzy4yGdfqB3e1so5cdD1NwW
EbM9mPLjgeGqRg3/nhnM5/vjb5rLX/lTfjzUOU+zdh6SUH48mAMxTqGHvCif
7x//yC7j7XLKV4KrXXk+McCZ8vl1MZ+LPB9Hyue9qOnwrZfWlM97S9TFM5No
fmZ5t8wLC33LUD7v7soXOW7TuMF8JVj/cJFZk3jQWr6uH7hW4rZo0EwCMKcB
px4vHbQoAexNo+u+1a6DBu9aV0ezLM9BS/nnuM0nYr+I5lk2AVyV9fmlxf6D
VvNu0Lts6gmk/ARoJywzTYmg84KWr3dfCO1rDKX8RIjmDxv7sU0E5Sfy/49N
UJdZFOUnQhd64ehcLynlJ8LAL2HbxY0xlJ+I1k67JyacjPITId5xwdX7bznl
8/c/kW0XZBNL+fznMmDAe15mHOUnQd1lOvHRqXjKT+LnuWqTVJ2S8nlbD+/9
xSqR8pMgMtkhfl+VRPlJEP/1tdzwVDLlJ0Gb/u20t69SKD8JJVPG6OoXpFF+
Ethx484dd1BRfjKkz0dPeNxBFiXDeLThne3r6PyAZEhiFF5VM1ZSfjK4h3Y/
mjWSWf76rTdyjJMzKJ+3h/JSjkEm5Sfz87X90+Vnydpk5MzcNL8oLIvyUyDp
63lpzWRTfgo/z8yM9ztCRgrED3ofdXjR+UrK1zG3rr2XzKagUX7E3HN/DuWn
IKRrTpGFM52HOH7fWFVmktdF1qbArbLWynGPcD5LhX6R66R0xzzK571NaWT0
hIxUqE2fFVrtovObNBUG8llfX7RfQ/mpQGR4c91jsjoVnRuGOVvspvMalwrV
gqlh4xbT+U6bCtH06CjlM+G8l4Ycu0nX93mylJ+GTkl3rf0hMtKgcdC9Z9RP
lvL75Nmqp7MldD5k0zCSSdu85ihZnYa6htejR70jc2kwsBwov76ikPL5uptN
yI0TZEYFgxOa9A9HrB+0gQqStZ5jN0WTRSq0ct4B9nVksQqaW4+TLMdv4P4F
RCLMuw==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-1201.9983199198925`, 725.2226478087873}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.852483545594967*^9, 3.8526405700227633`*^9, 
  3.852738125510866*^9, 3.8528379882637324`*^9, 3.854051560227168*^9, 
  3.854109782451974*^9, 3.8543862997026634`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"413ccd9c-49bd-4e6a-81de-f41822bc4457"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myfit1", "[", "\"\<FitResiduals\>\"", "]"}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Filling", "->", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.852483389828261*^9, 3.852483413036353*^9}, {
  3.8524834616231265`*^9, 3.852483470656581*^9}, {3.8524835147133946`*^9, 
  3.8524835149660115`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"401e63bd-5ec4-4a68-9043-73216956d400"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
eRqzG/N05hnMM5ndmT2YPZlnMXsxezP7MM9mnsOM3paZxVw2Zxa+bM4s/Nic
Wcxjc2bhz+bMIoDNmcV8NmcWgWzOLILYnFkEszmzCGFzZhHK5swijM2ZRTib
M4sINmcWkb0NZplZYRZRvQ1mmVlhFtEszywzK8wihuWZZWaFWcT2NphlZoVZ
xLE8s8ysMIsFLM8sMyvMIp7lmWVmhVkk9DaYZWaFWSSyPLPMrDCLJJZnlpkV
ZpHM8swys8IsUlieWWZWmEUqyzPLzAqzSOttMMvMCrNIZ3lmmVlhFlJvG5jB
LDHLzFZmhVllFhmsnxnMErPMbGVWmFXmX/5e0KufGcwSs8xsZVaYVWZhYv3M
YJaYZWYrs8KsMgtzbxuYwSwxy8xWZoVZZRZZrJ8ZzBKzzGxlVphVZpHN+pnB
LDHLzFZmhVllFjmsnxnMErPMbGVWmFVmkdvbBmYwS8wys5VZYVaZRR7rZwaz
xCwzW5kVZpVZ5LN+ZjBLzDKzlVlhVplFAetnBrPELDNbmRVmlVkUsn5mMEvM
MrOVWWFWmUVRbxuYwSwxy8xWZoVZZRbFrJ8ZzBKzzGxlVphVZlHS2wZmMEvM
MrOVWWFWmYWlt+2YDcxG5r79BX37C/r2F/TtL+jbX0D5vv0FffsL+vYX9O0v
6Ntf0NPft7+gb39B3/6Cvv0FffsLevr/f/cX/Ac1/ItZ
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{268, 9}], LineBox[{269, 10}], LineBox[{270, 11}], 
       LineBox[{271, 12}], LineBox[{272, 13}], LineBox[{275, 16}], 
       LineBox[{276, 17}], LineBox[{277, 18}], LineBox[{278, 19}], 
       LineBox[{279, 20}], LineBox[{280, 21}], LineBox[{281, 22}], 
       LineBox[{282, 23}], LineBox[{283, 24}], LineBox[{284, 25}], 
       LineBox[{285, 26}], LineBox[{286, 27}], LineBox[{287, 28}], 
       LineBox[{288, 29}], LineBox[{289, 30}], LineBox[{290, 31}], 
       LineBox[{456, 197}], LineBox[{457, 198}], LineBox[{458, 199}], 
       LineBox[{459, 200}], LineBox[{460, 201}], LineBox[{461, 202}], 
       LineBox[{462, 203}], LineBox[{463, 204}], LineBox[{464, 205}], 
       LineBox[{465, 206}], LineBox[{466, 207}], LineBox[{467, 208}], 
       LineBox[{468, 209}], LineBox[{469, 210}], LineBox[{470, 211}], 
       LineBox[{471, 212}], LineBox[{472, 213}], LineBox[{473, 214}], 
       LineBox[{474, 215}], LineBox[{475, 216}], LineBox[{476, 217}], 
       LineBox[{477, 218}], LineBox[{478, 219}], LineBox[{479, 220}], 
       LineBox[{480, 221}], LineBox[{481, 222}], LineBox[{482, 223}], 
       LineBox[{483, 224}], LineBox[{484, 225}], LineBox[{485, 226}], 
       LineBox[{486, 227}], LineBox[{487, 228}], LineBox[{488, 229}], 
       LineBox[{489, 230}], LineBox[{490, 231}], LineBox[{491, 232}], 
       LineBox[{492, 233}], LineBox[{493, 234}], LineBox[{494, 235}], 
       LineBox[{495, 236}], LineBox[{496, 237}], LineBox[{497, 238}], 
       LineBox[{498, 239}], LineBox[{499, 240}], LineBox[{500, 241}], 
       LineBox[{501, 242}], LineBox[{502, 243}], LineBox[{503, 244}], 
       LineBox[{504, 245}], LineBox[{505, 246}], LineBox[{506, 247}], 
       LineBox[{507, 248}], LineBox[{508, 249}], LineBox[{509, 250}], 
       LineBox[{510, 251}], LineBox[{511, 252}], LineBox[{512, 253}], 
       LineBox[{513, 254}], LineBox[{514, 255}], LineBox[{515, 256}], 
       LineBox[{516, 257}], LineBox[{517, 258}], LineBox[{518, 259}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{260, 1}], LineBox[{261, 2}], LineBox[{262, 3}], 
       LineBox[{263, 4}], LineBox[{264, 5}], LineBox[{265, 6}], 
       LineBox[{266, 7}], LineBox[{267, 8}], LineBox[{273, 14}], 
       LineBox[{274, 15}], LineBox[{291, 32}], LineBox[{292, 33}], 
       LineBox[{293, 34}], LineBox[{294, 35}], LineBox[{295, 36}], 
       LineBox[{296, 37}], LineBox[{297, 38}], LineBox[{298, 39}], 
       LineBox[{299, 40}], LineBox[{300, 41}], LineBox[{301, 42}], 
       LineBox[{302, 43}], LineBox[{303, 44}], LineBox[{304, 45}], 
       LineBox[{305, 46}], LineBox[{306, 47}], LineBox[{307, 48}], 
       LineBox[{308, 49}], LineBox[{309, 50}], LineBox[{310, 51}], 
       LineBox[{311, 52}], LineBox[{312, 53}], LineBox[{313, 54}], 
       LineBox[{314, 55}], LineBox[{315, 56}], LineBox[{316, 57}], 
       LineBox[{317, 58}], LineBox[{318, 59}], LineBox[{319, 60}], 
       LineBox[{320, 61}], LineBox[{321, 62}], LineBox[{322, 63}], 
       LineBox[{323, 64}], LineBox[{324, 65}], LineBox[{325, 66}], 
       LineBox[{326, 67}], LineBox[{327, 68}], LineBox[{328, 69}], 
       LineBox[{329, 70}], LineBox[{330, 71}], LineBox[{331, 72}], 
       LineBox[{332, 73}], LineBox[{333, 74}], LineBox[{334, 75}], 
       LineBox[{335, 76}], LineBox[{336, 77}], LineBox[{337, 78}], 
       LineBox[{338, 79}], LineBox[{339, 80}], LineBox[{340, 81}], 
       LineBox[{341, 82}], LineBox[{342, 83}], LineBox[{343, 84}], 
       LineBox[{344, 85}], LineBox[{345, 86}], LineBox[{346, 87}], 
       LineBox[{347, 88}], LineBox[{348, 89}], LineBox[{349, 90}], 
       LineBox[{350, 91}], LineBox[{351, 92}], LineBox[{352, 93}], 
       LineBox[{353, 94}], LineBox[{354, 95}], LineBox[{355, 96}], 
       LineBox[{356, 97}], LineBox[{357, 98}], LineBox[{358, 99}], 
       LineBox[{359, 100}], LineBox[{360, 101}], LineBox[{361, 102}], 
       LineBox[{362, 103}], LineBox[{363, 104}], LineBox[{364, 105}], 
       LineBox[{365, 106}], LineBox[{366, 107}], LineBox[{367, 108}], 
       LineBox[{368, 109}], LineBox[{369, 110}], LineBox[{370, 111}], 
       LineBox[{371, 112}], LineBox[{372, 113}], LineBox[{373, 114}], 
       LineBox[{374, 115}], LineBox[{375, 116}], LineBox[{376, 117}], 
       LineBox[{377, 118}], LineBox[{378, 119}], LineBox[{379, 120}], 
       LineBox[{380, 121}], LineBox[{381, 122}], LineBox[{382, 123}], 
       LineBox[{383, 124}], LineBox[{384, 125}], LineBox[{385, 126}], 
       LineBox[{386, 127}], LineBox[{387, 128}], LineBox[{388, 129}], 
       LineBox[{389, 130}], LineBox[{390, 131}], LineBox[{391, 132}], 
       LineBox[{392, 133}], LineBox[{393, 134}], LineBox[{394, 135}], 
       LineBox[{395, 136}], LineBox[{396, 137}], LineBox[{397, 138}], 
       LineBox[{398, 139}], LineBox[{399, 140}], LineBox[{400, 141}], 
       LineBox[{401, 142}], LineBox[{402, 143}], LineBox[{403, 144}], 
       LineBox[{404, 145}], LineBox[{405, 146}], LineBox[{406, 147}], 
       LineBox[{407, 148}], LineBox[{408, 149}], LineBox[{409, 150}], 
       LineBox[{410, 151}], LineBox[{411, 152}], LineBox[{412, 153}], 
       LineBox[{413, 154}], LineBox[{414, 155}], LineBox[{415, 156}], 
       LineBox[{416, 157}], LineBox[{417, 158}], LineBox[{418, 159}], 
       LineBox[{419, 160}], LineBox[{420, 161}], LineBox[{421, 162}], 
       LineBox[{422, 163}], LineBox[{423, 164}], LineBox[{424, 165}], 
       LineBox[{425, 166}], LineBox[{426, 167}], LineBox[{427, 168}], 
       LineBox[{428, 169}], LineBox[{429, 170}], LineBox[{430, 171}], 
       LineBox[{431, 172}], LineBox[{432, 173}], LineBox[{433, 174}], 
       LineBox[{434, 175}], LineBox[{435, 176}], LineBox[{436, 177}], 
       LineBox[{437, 178}], LineBox[{438, 179}], LineBox[{439, 180}], 
       LineBox[{440, 181}], LineBox[{441, 182}], LineBox[{442, 183}], 
       LineBox[{443, 184}], LineBox[{444, 185}], LineBox[{445, 186}], 
       LineBox[{446, 187}], LineBox[{447, 188}], LineBox[{448, 189}], 
       LineBox[{449, 190}], LineBox[{450, 191}], LineBox[{451, 192}], 
       LineBox[{452, 193}], LineBox[{453, 194}], LineBox[{454, 195}], 
       LineBox[{455, 196}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwV01VjFgQAQNFvG7DRSIkgMZAuAQmluwTpzlEqsBHS3R1KS0l3d3e3CKJ0
Y9DdHB7O/Qc3PCKqWmRQIBAIkdDgQCCMmMQiNnGISzzik4BPSEgiEpOEpHxK
Mj4jOSn4nJSkIjVpCCct6fiC9GQgI5nITBayko3s5CAnX5KL3OThK/KSj/wU
4Gu+oSCFKEwRilKM4pSgJKUoTRnKUo7yVKAi31KJynxHFapSjerUoCa1qE0d
6lKP+jSgIY1oTBOaEkEzmtOClrTie37gR1rThrZEEkU72tOBjvxEJzrTha50
ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrH8zC+MYzwTmMgkJjOF
X5nKNKYzg5n8xixmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySl+5zR/cIaz/Mk5/uJv
znOBi1ziMle4yjWuc4Ob3OI2d/iHf/mP/7nLPe7zgIc84jFPeMoznvOCl7zi
NW94yzveB38cPRAIIpgQohGdGIQSRkw+AHBbg2A=
       "]]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-1201.9983199198925`, 725.2226478087873}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.85248339561047*^9, 3.8524834144574523`*^9}, 
   3.8524834732353477`*^9, 3.8524835156180887`*^9, 3.8526405701523423`*^9, 
   3.8527381256045494`*^9, 3.8528379883602495`*^9, 3.8540515603448553`*^9, 
   3.854109782587134*^9, 3.854386299785814*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"30407a47-5aaa-41e9-a384-2ce1b1c79485"]
}, Open  ]],

Cell[TextData[StyleBox["Guinea",
 FontSize->18,
 FontColor->RGBColor[0.5, 0, 0.5]]], "Text",
 CellChangeTimes->{{3.85177953742101*^9, 
  3.8517795403012905`*^9}},ExpressionUUID->"8823fcef-8f8d-4d1c-a127-\
408836b17346"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Guinea", " ", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"Ebola1", ",", " ", 
     RowBox[{
      RowBox[{"#Country", " ", "==", " ", "\"\<Guinea\>\""}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851779546086409*^9, 3.851779562226142*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"0bc4fe0f-09ab-4b16-8149-1753f3b19fbe"],

Cell[TextData[StyleBox["Create new datasets",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.851796575288082*^9, {3.85240152755119*^9, 3.85240152965992*^9}, {
   3.8528381287051983`*^9, 
   3.852838130864601*^9}},ExpressionUUID->"b77740e0-c020-4a5b-9d2f-\
71121a62bd73"],

Cell[TextData[StyleBox["Number of confirmed cases Dataset",
 FontSize->24,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{
  3.851796558496788*^9},ExpressionUUID->"19f3e50e-e38c-4e78-be51-\
fdd1d0689e35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Guinea1", " ", "=", " ", 
   RowBox[{"Guinea", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Days\>\"", ",", " ", "\"\<Number of confirmed cases\>\""}],
       "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851796621475116*^9, 3.8517966314567776`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"1b2d1043-06a6-4532-b9ad-a8aeae591958"],

Cell[TextData[StyleBox["Converting Guinea1 dataset to List",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.851796682500469*^9, 
  3.851796688444753*^9}},ExpressionUUID->"9fbdae80-f66b-4e89-977b-\
d48e425c5b85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Guinea1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Days\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Susp", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Guinea", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "\"\<Number of confirmed cases\>\""}], "]"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Guinea2", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "Susp"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.851796756859275*^9, 3.85179678263096*^9}, {
  3.8517984136826143`*^9, 3.8517984169395885`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"d79dd98d-c03a-4393-a0b2-4b67573ab73e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"Guinea2", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Number of confirmed cases\>\"", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Infected People (I)\>\""}], 
      "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Confirmed cases (Infected People) in Guinea\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8517968452941523`*^9, 3.8517968558913336`*^9}, {
  3.8528403244043083`*^9, 3.852840329177419*^9}, {3.852840422556444*^9, 
  3.8528404232593546`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"aa90ecc9-0591-4d16-99bd-5b58337eb32b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         PointSize[0.01]], 
        LineBox[CompressedData["
1:eJxdz02IVnUcxfF/k8QgEYMMIjHEbRhEZBimN5tevU32ZjZNVjZNo90sy2pS
aTkLuYTZZC9MZm8WciuzkhAJaTGE/BdDRLhoFS1cXCIiWrmIFhIS9fse4p5n
c54Pv+fcc58rt+/evKMnpXTxRSn9m51PsbeML+fW/xftSzhF5n24N3L0ZdwX
OfYK7o/cI6+KXHgVD5AHyCKyeg0PRp58Aw9Fzr+JV0dOLuA1kUNv4bWR9UE8
HLnsbTzC7w/hUX4vXxX57Tv4avrv4msil+RrIwfew9dFjn6A1/E8+Xr+z2E8
FrnhQ3xD5O8f4RvZP4Jv4v3lmyMvafAtkfvlWyOPyOsjj32My8ifcW1Ot0Vu
+oQ7bnAaj1zU3Zxu5/0+5Y7HcdoQOaG7Od0ROa07ntP9zsj3dTenuyKP6o5P
6X4376s7/kn3e7quzWlj5Fnd8S+63xt5QXe84ij3TV3XeKXu90VeoTse130i
stLdnO6PnNMdz+s+GfkrLs01Po8zXv4Z/Qfo4RJP4Nqc8ZT6myNn1Mevq48P
qY8X1X8w8oz6+Jz65owHj9F/KHIUl3gXrs0ZH1f/4cjT6uPLP6ePh3E2py2R
U7jEe9XH+9U3p0ciT6qPl9THg1/Qx2txmoqcxCWexrU5453qPxo5qz6eUx/X
6pvTdOSC+vig+vio+vgr9R+LPKE+/lp9/I36+LT6M12XeEl9c8Y/qL818oz6
W7v3Gv+mPv5D/W2Rf6mPe76kb864F6fHI5fjEvepj/vVN6cqcgAXuNDz8Bpc
4RE939zgddrDY7jFG7X/ROSE9s0l3qJ9c423a9+c8bT28Yz2t0du0z6e1T5+
UfvmGtfax/u0j+e1jw9o/8muC3xY+/iI9vEJ7Zsbc8antI8Xtf9U5Hfax99r
31zhH7WPz2of/6l9c2tOOyLPa99cmiv8t/bNjTmbW3xB+093XZhL3HOcfXNt
bszZ3OJlOD3TdYF7cWmuzDW+VPvmbG7xZdrf2XWB+7RvrvAK7Zsbc8b92jen
Z7suzKW5MtfmxpzNrTk9Z/t4pfbxKu2ba3NjzuYWD2j/eXa1by7Nlbk2N+Zs
bs1p1vbNJR7UPh7SPl6tfXM2t3hY+y90XZhLc4VHtG9uzNncmtOurgtzaa7M
tbkxZ3NrTrtt31yaK3NtbszZ3JrTnq77zMX//gcRTkCm
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Infected People (I)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Number of Confirmed cases (Infected People) in Guinea\"", 
       TraditionalForm], PlotRange -> {{0, 258.}, {0, 3351.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Number of confirmed cases\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.851796861088733*^9, 3.8517984257109594`*^9, 
  3.852406497443158*^9, 3.852411259542167*^9, 3.8524115335054*^9, 
  3.8524120412385054`*^9, 3.8524136806890016`*^9, 3.852482670025064*^9, 
  3.852640570556901*^9, 3.852738127555709*^9, 3.8528379886570625`*^9, 
  3.8528403298887143`*^9, 3.852840423774891*^9, 3.8540515605034294`*^9, 
  3.8541097827603407`*^9, 3.854386299895134*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"726952e3-c10c-419c-b80d-a7da22073384"]
}, Open  ]],

Cell[TextData[StyleBox["Number of confirmed deaths Dataset",
 FontSize->24,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{
  3.851797607786014*^9},ExpressionUUID->"382dff71-31f2-4624-a1da-\
bf988b59a547"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Guinea01", " ", "=", " ", 
   RowBox[{"Guinea", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Days\>\"", ",", " ", "\"\<Number of confirmed deaths\>\""}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.85179766354187*^9, 3.8517976747808995`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"60f64808-5fc6-4e8a-bea7-c97c1a235f3b"],

Cell[TextData[StyleBox["Converting Guinea1 dataset to List",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.851797749749287*^9, 3.8517977549422398`*^9}, {
  3.851797838983013*^9, 
  3.851797842572863*^9}},ExpressionUUID->"4e741f7e-31e5-4e19-a6cd-\
d632478bc91e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Guinea01", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Days\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Susp", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Guinea01", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "\"\<Number of confirmed deaths\>\""}], "]"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Guinea02", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "Susp"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.851797847306464*^9, 3.8517978687374964`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"d405a4e1-ee31-4e9b-9151-e7ffd81a48f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot01", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"Guinea02", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Number of confirmed deaths\>\"", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Removed People (R)\>\""}], "}"}]}],
     ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Confirmed deaths (Removed People) in Guinea\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8517979452748537`*^9, 3.8517979678447742`*^9}, {
  3.8524118528064766`*^9, 3.85241187105927*^9}, {3.852840336046072*^9, 
  3.8528403461303368`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"cdf7e8fb-2747-49ad-84d8-14c28f772d7c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.01]], 
        LineBox[CompressedData["
1:eJxdzj1sVXUcxvG/yMBk7tAYYjocTWMaQkxVxCtWOGLFt6oVq14V9IhFq1bB
hBhfovlrjDHGF9SqqFXPwNChA4NDx//YoQODgwPDGRgYGDo4MDgY/X2fmPPc
5bmf+7vPec71x04cPr4tpXT1VSn9m73P1ps1Xw78F+1bOJHvkDsip+RB5Pl3
8Rj39/DOyMH7eDyylivuH+AbItcznog8/SG+MXL0EZ6MPCfvilz8GO+OvCLf
xPt9gqciO/lmUp9bzLeGJz/j9z28n3wbz/8C743ckm/nfb/EQ/7/Fb6D9z+N
90UOv8Z3Rp6SpyMvfIPvilz5Fu+PXJcPRK4t45r8LjKb092RZ3XHw++5H4xc
wNmc7uH9dMf1D9xnIpdwNqd7+V13vKb7ochN3c3pvshLuuPtZ7jfHzmGM57T
/YHIed3N6cHIRne8oPtDkWd0x6u6z/ad8ZruD0f+rju+rPsjkX/pbk6Pkj9y
xxVOc+zh2pzxJi74svqPRQ5/oo9ncTYXPMLpcGSjPv5cfdyqjzfUfzzyovp4
/Gf65oLncZqPXMI13lDfXHBaIZ+IHMM1PoUzXsbFnJ6M/FN9PP4LfTyBizk9
FTmLazxSH/+tPt7+K/1RZIVrPIWzueCh+k9HzqiPR+rjI+qb0zORS+rjt9XH
K+rjVfWfjVxXHxf18Yb6eFP9I33X+Lz65oI79Y9GXlT/aP+e8Zb6+Ir6z0Xu
+I0+HuBsLngnTs9HTqiPp9XHM+qbUxM5hys80vPwAm7wop5vbvFJ7Zk7nLX/
QuSn2jfXeFn75oxb7eOz2jd3eFX7xyLXtI/PaR+va9+c8R/aNxd8Qfvm9GLf
Fe60jy9pH6eWfbwNt+aCr8GdOS1EDnBlrs2NOeNrtY+v0z4e1745HY+c0L65
xpPax7u0b27Nxdzh3dp/qe/KXOMp7ZuzuTUXc2dOL/ddmWtzY854j/bNBe/V
vjkt9l3hofbNjTnjfdo3F3NnTq9ETmvfXJsbcza35mLuzOlV28f7tW9uzNnc
4lr75s6cXuu7MtfmxpzxQe2bi7kzp6W+K3NtbvCM9s2tuZg7c3q97wof0r65
MWdzay7mzpze6Lsy1+bGnM2tuZg7czph++ba3JizuTUXc2dOJ/semKv//Q8o
aTLt
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Removed People (R)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Number of Confirmed deaths (Removed People) in Guinea\"", 
       TraditionalForm], PlotRange -> {{0, 258.}, {0, 2083.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Number of confirmed deaths\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.851797972274312*^9, 3.851798437790533*^9, 3.852406497605094*^9, 
   3.8524112596771903`*^9, 3.8524115336683764`*^9, 3.852411875372361*^9, 
   3.852412041374996*^9, 3.8524136808337746`*^9, 3.852482670171276*^9, 
   3.8526405707165437`*^9, 3.852738127696294*^9, 3.8528379888289304`*^9, {
   3.8528403395458574`*^9, 3.8528403466795073`*^9}, 3.854051560640614*^9, 
   3.8541097829283147`*^9, 3.854386300005881*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"dd6e34fc-0529-4436-ab51-18e22f757386"]
}, Open  ]],

Cell[TextData[StyleBox["Number of suspected cases Dataset",
 FontSize->24,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.85180107249295*^9, 
  3.851801084725695*^9}},ExpressionUUID->"ae652725-ea1f-4b29-926e-\
a2f2621a3f00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Guinea001", " ", "=", " ", 
   RowBox[{"Guinea", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Days\>\"", ",", " ", "\"\<Number of suspected cases\>\""}],
       "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.851801110251131*^9, 3.851801124034334*^9}, {
  3.8518011636712666`*^9, 3.8518011665432215`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e725d101-581d-493f-93ba-37e3453a73fd"],

Cell[TextData[StyleBox["Converting Guinea1 dataset to List",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{
  3.8518011404229565`*^9},ExpressionUUID->"a1fd1177-21d6-40e8-945a-\
ef63532d7154"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Guinea01", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Days\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Susp", " ", "=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Guinea001", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "\"\<Number of suspected cases\>\""}], "]"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Guinea002", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"time", ",", "Susp"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8518011572223516`*^9, 3.851801180129493*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"bb0d0d87-a6bd-42d9-bb68-8d471b11757a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot001", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"Guinea002", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Number of suspected cases\>\"", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Suspected (Exposed) (E)\>\""}], 
      "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Suspected cases (Exposed People) in Guinea\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.851801206690136*^9, 3.8518012599801598`*^9}, 
   3.8524116686097994`*^9, {3.852414132400978*^9, 3.8524141331966095`*^9}, {
   3.8524141765972815`*^9, 3.8524141776477003`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"42ec6436-4725-459e-a464-bffdd3640707"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         PointSize[0.01]], 
        LineBox[{{0., 25.}, {0.9838709677419355, 55.5}}], 
        LineBox[{{1.0555555555555556`, 55.5}, {2., 47.}, {3., 32.}, {4., 
         31.}, {5., 30.}, {6., 28.}, {7., 28.}, {8., 36.}, {9., 37.}, {10., 
         45.}, {10.362068965517242`, 55.5}}], 
        LineBox[{{15.227272727272727`, 55.5}, {16., 47.}, {16.03159851301115, 
         55.5}}], 
        LineBox[{{17.994274809160306`, 55.5}, {18., 54.}, {18.09375, 55.5}}], 
        LineBox[CompressedData["
1:eJxd1rlulDEYheFPVJQpKCiQMCOEEEKIfYeYfQtLwhogwQSGELbhEtxwH/9l
UPpS/hoaLgGiOa+QT6To6Int8e7Jvo3ZynRHRPz697ude3/8Xv65fi7H9k+7
N884rzyrvKBUvbioPKm8pDyqvGyfszjPelvOyjv6uzmuKE+oHF+11N+rOa5Z
e8x4ritPq9wcN5THVI6PK28q96jcHLeUSeX4gJJ1OKhyfETJOhxSuTnuWns8
UbKPGm/F7M9S77rU14/71j/mPDxQav+rOR5a/5j5P+rLs7lija9h1mdZqfXO
5mpuOJQrvTPer/Z4t9pj9vexUvub8S61Nzes/YonSs0vY86juWHO91Ol7mPG
p9Qe6542czzr62es9a1Y+9nM8Vype5+x7lfFmm/DWq940feXMffN3DDjX7X+
V/v6FR9We3O8VE7UHnMfzA1zfl8pOX9Y56li3Z9m9eO1tTdXc8P0v6bk/K31
5RVP1N7KY12p/cmY/Tc3zPv5RnlG7THvBWb/zVGUul8Ja7wZa78K5n6aB6z5
NazzMGLez7f9eJI5mwtmfbDGO2CNp5lHc2wotX8J8x5gvYfFXLHmO5gb1nxH
rPWId70T5j3Geh8K5nxi+jc3vKD+Mff/vVLvY8Jan2wumO9TKx8w5w1rPKM5
pkqtT5r25RlrPwqeqH/zgLmveKf6t/L4oGT+5ow1noJ1Hypm/pjvK/No9WOz
H3/a7OtnrPesmKvVH+zzGmb/seYXH3snrPbZXPCfxXn/WOs7mBvWeEdzbPX1
01Zfns0F0795sM9r1n40xyel1idhtc9WXjD3zzxg3Y9m7UfM/n/u6ydzxpw/
zP+bmP7NzTxi5v9FyfqbM2b+mP+vrP6AtR/NPJrjq/WPuX/mgnXeK2b/zc08
muNb72TOWD/FXM2DuZlHc8ys/1lfns3FXDHrb272+aO1j++9F8zpv/8CO/ZQ
kg==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Suspected (Exposed) (E)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Number of Suspected cases (Exposed People) in Guinea\"", 
       TraditionalForm], PlotRange -> {{0, 258.}, {0, 55.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Number of suspected cases\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8518012617064734`*^9, 3.852406497774831*^9, 
  3.8524112598176374`*^9, 3.852411533913908*^9, 3.85241167667365*^9, 
  3.8524120415172467`*^9, 3.852413680980514*^9, 3.8524141369150915`*^9, 
  3.8524826703104963`*^9, 3.852640570974552*^9, 3.852738127858742*^9, 
  3.8528379889851065`*^9, 3.8540515607800674`*^9, 3.854109783088625*^9, 
  3.854386300127488*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"352a877c-3b23-4e82-bae3-c3671f40f86c"]
}, Open  ]],

Cell[TextData[StyleBox["ORDINARY DIFFERENTIAL EQUATION ",
 FontSize->36,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{
  3.852486128697571*^9},ExpressionUUID->"5f2b64f2-cf80-4398-96a9-\
dd14bdb13806"],

Cell[TextData[StyleBox["SIR Model",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.851796929723688*^9},ExpressionUUID->"8e115e1f-7331-4077-9950-\
a9e0f7671ca6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalS]", "\[DirectedEdge]", "\[ScriptCapitalI]"}], 
     ",", 
     RowBox[{"\[ScriptCapitalI]", "\[DirectedEdge]", "\[ScriptCapitalR]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"VertexShapeFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xy", ",", "v", ",", "wh"}], "}"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"v", ",", "Black", ",", "18"}], "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
        "xy"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ScriptCapitalS]", "\[DirectedEdge]", "\[ScriptCapitalI]"}], 
       "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"Style", "[", " ", 
          RowBox[{"\[Alpha]", ",", "Black", ",", "18"}], "]"}], ",", "0.5"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[ScriptCapitalI]", "\[DirectedEdge]", "\[ScriptCapitalR]"}], 
       "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\[Lambda]", ",", "Black", ",", "18"}], "]"}], ",", "0.5"}],
         "]"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"closeCellGroup", "[", "]"}]}], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"cd468ab1-bb7a-4f7a-9420-9b9081a331cf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`\[ScriptCapitalS], $CellContext`\[ScriptCapitalI], \
$CellContext`\[ScriptCapitalR]}, {{{1, 2}, {2, 3}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[$CellContext`\[ScriptCapitalI], $CellContext`\
\[ScriptCapitalR]] -> Placed[
           Style[$CellContext`\[Lambda], 
            GrayLevel[0], 18], 0.5], 
         DirectedEdge[$CellContext`\[ScriptCapitalS], $CellContext`\
\[ScriptCapitalI]] -> Placed[
           Style[$CellContext`\[Alpha], 
            GrayLevel[0], 18], 0.5]}, ImageSize -> 450, PerformanceGoal -> 
       "Quality", VertexShapeFunction -> {
         Function[{$CellContext`xy, $CellContext`v, $CellContext`wh}, 
          Inset[
           Framed[
            Style[$CellContext`v, Black, 18], Background -> 
            LightBlue], $CellContext`xy]]}}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], {
        TagBox[
         ArrowBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$2", Automatic, Center]}], "DynamicName", 
         BoxID -> "EdgeLabelID$1"], 
        InsetBox[
         FormBox[
          StyleBox["\[Alpha]", 
           GrayLevel[0], 18, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 2}, 
          DynamicLocation["EdgeLabelID$1", Automatic, 
           Scaled[0.5]]], 
         ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
        TagBox[
         ArrowBox[{
           DynamicLocation["VertexID$2", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], "DynamicName", 
         BoxID -> "EdgeLabelID$2"], 
        InsetBox[
         FormBox[
          StyleBox["\[Lambda]", 
           GrayLevel[0], 18, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 2}, 
          DynamicLocation["EdgeLabelID$2", Automatic, 
           Scaled[0.5]]], 
         ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         BoxData[
          FormBox[
           FrameBox[
            StyleBox["\[ScriptCapitalS]", 
             GrayLevel[0], 18, StripOnInput -> False], Background -> 
            RGBColor[0.87, 0.94, 1], StripOnInput -> False], 
           TraditionalForm]], {0., 3.6739403974420594`*^-16}], "DynamicName", 
        BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         BoxData[
          FormBox[
           FrameBox[
            StyleBox["\[ScriptCapitalI]", 
             GrayLevel[0], 18, StripOnInput -> False], Background -> 
            RGBColor[0.87, 0.94, 1], StripOnInput -> False], 
           TraditionalForm]], {1., 2.4492935982947064`*^-16}], "DynamicName", 
        BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         BoxData[
          FormBox[
           FrameBox[
            StyleBox["\[ScriptCapitalR]", 
             GrayLevel[0], 18, StripOnInput -> False], Background -> 
            RGBColor[0.87, 0.94, 1], StripOnInput -> False], 
           TraditionalForm]], {2., 0.}], "DynamicName", BoxID -> 
        "VertexID$3"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-1.4142135623731082`, 
       325.41421356237305`}, {-16.712963562373155`, 14.414213562373106`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->450]], "Output",
 CellChangeTimes->{3.8524018266938057`*^9, 3.8524064979175177`*^9, 
  3.8524112598994207`*^9, 3.8524115339989257`*^9, 3.8524120415970936`*^9, 
  3.852413681085004*^9, 3.852482670371045*^9, 3.8526405710808663`*^9, 
  3.8527381279525075`*^9, 3.8528379890632486`*^9, 3.854051560854705*^9, 
  3.854109783220069*^9, 3.854386300189937*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"2d0162c2-4bf2-4738-acbf-195cce372afa"],

Cell[BoxData[
 RowBox[{"closeCellGroup", "[", "]"}]], "Output",
 CellChangeTimes->{3.8524018266938057`*^9, 3.8524064979175177`*^9, 
  3.8524112598994207`*^9, 3.8524115339989257`*^9, 3.8524120415970936`*^9, 
  3.852413681085004*^9, 3.852482670371045*^9, 3.8526405710808663`*^9, 
  3.8527381279525075`*^9, 3.8528379890632486`*^9, 3.854051560854705*^9, 
  3.854109783220069*^9, 3.8543863002211733`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c75779e8-1c6c-4982-a44d-2ed2b8e78750"]
}, Open  ]],

Cell[TextData[StyleBox["Estimating parameters using the number of confirmed \
cases dataset",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.851796970528655*^9},ExpressionUUID->"8ca080c9-8dd7-44eb-9386-\
c0c2d910a0b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymodel", "[", 
   RowBox[{
    RowBox[{"alpha_", "?", "NumberQ"}], ",", 
    RowBox[{"lambda_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "I1", ",", "R1", ",", "t"}], "}"}], ",", 
    RowBox[{"First", "[", 
     RowBox[{"I1", "/.", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", "alpha"}], "*", 
            RowBox[{"S", "[", "t", "]"}], "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"I1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"alpha", "*", 
             RowBox[{"S", "[", "t", "]"}], "*", 
             RowBox[{"I1", "[", "t", "]"}]}], "-", 
            RowBox[{"lambda", "*", 
             RowBox[{"I1", "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"R1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"lambda", "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"S", "[", "0", "]"}], "\[Equal]", "3500"}], ",", 
          RowBox[{
           RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "680"}], ",", 
          RowBox[{
           RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", "I1", ",", "R1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "300"}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"myfit2", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"Guinea2", ",", 
     RowBox[{
      RowBox[{"mymodel", "[", 
       RowBox[{"alpha", ",", "lambda"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"alpha", ",", "0.000005"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"lambda", ",", "0.0000001"}], "}"}]}], "}"}], ",", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"myfit2", "[", "\"\<EstimatedVariance\>\"", "]"}], "\n", 
 RowBox[{"myfit2", "[", "\"\<ParameterTable\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotfit1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"myfit2", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "300"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Fitted Model\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Infected People (I)\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Ebola Epidermic Fitted Model of Infected Individuals in \
Guinea\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"plotfit1", ",", "plot1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.851797022548956*^9, 3.8517970313650856`*^9}, {
  3.8517971335484653`*^9, 3.8517971384987955`*^9}, {3.8517972119039297`*^9, 
  3.851797215695119*^9}, {3.851798317041698*^9, 3.851798336455536*^9}, {
  3.8517985007499886`*^9, 3.8517985022117324`*^9}, {3.8517985370504103`*^9, 
  3.8517985466971807`*^9}, {3.851798581278064*^9, 3.8517986027673593`*^9}, {
  3.85179864187541*^9, 3.851798644073374*^9}, {3.851798690643652*^9, 
  3.851798691173774*^9}, {3.8524039670594645`*^9, 3.852403977053173*^9}, {
  3.852404034743185*^9, 3.8524040367831144`*^9}, {3.852410196460944*^9, 
  3.85241019866969*^9}, {3.8524107648106813`*^9, 3.8524107664107523`*^9}, {
  3.8524128831771126`*^9, 3.852412883678115*^9}, {3.852412926682396*^9, 
  3.8524129567170763`*^9}, {3.852412988245202*^9, 3.852413016294359*^9}, {
  3.8524130576658926`*^9, 3.852413058406657*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d8083702-70eb-4e84-901a-fbd0434973b1"],

Cell[BoxData["68759.55167965272`"], "Output",
 CellChangeTimes->{
  3.851798364789748*^9, 3.8517984755741663`*^9, 3.8517985218413596`*^9, 
   3.851798569080779*^9, 3.851798619755863*^9, 3.8517986647597184`*^9, 
   3.8517987186599965`*^9, 3.85240655519882*^9, 3.852410550344115*^9, 
   3.8524112808578453`*^9, 3.852411555146497*^9, 3.8524120624647207`*^9, 
   3.8524129048677616`*^9, {3.852412948654258*^9, 3.8524129768065634`*^9}, {
   3.8524130088477125`*^9, 3.852413037803113*^9}, 3.8524130782358356`*^9, 
   3.8524136987620163`*^9, 3.8524826904026847`*^9, 3.8526405913906293`*^9, 
   3.8527381468357687`*^9, 3.852838013750653*^9, 3.8528403799446945`*^9, 
   3.8528404474669495`*^9, 3.854051582384385*^9, 3.854109803901153*^9, 
   3.8543863173710933`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"dfd485b3-b0a0-4e7e-bc91-a40dbaa81dfa"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"alpha", "9.244647868303854`*^-6", "1.5288216381667512`*^-7", 
      "60.46910664732182`", "5.530445510585464`*^-154"},
     {"lambda", "0.0015412657780371093`", "0.00004594065053356151`", 
      "33.54906297879156`", "6.920917596602434`*^-96"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.851798364789748*^9, 3.8517984755741663`*^9, 3.8517985218413596`*^9, 
   3.851798569080779*^9, 3.851798619755863*^9, 3.8517986647597184`*^9, 
   3.8517987186599965`*^9, 3.85240655519882*^9, 3.852410550344115*^9, 
   3.8524112808578453`*^9, 3.852411555146497*^9, 3.8524120624647207`*^9, 
   3.8524129048677616`*^9, {3.852412948654258*^9, 3.8524129768065634`*^9}, {
   3.8524130088477125`*^9, 3.852413037803113*^9}, 3.8524130782358356`*^9, 
   3.8524136987620163`*^9, 3.8524826904026847`*^9, 3.8526405913906293`*^9, 
   3.8527381468357687`*^9, 3.852838013750653*^9, 3.8528403799446945`*^9, 
   3.8528404474669495`*^9, 3.854051582384385*^9, 3.854109803901153*^9, 
   3.854386318295619*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"e2e17078-7dd2-4aed-b6e4-6127ae5124ce"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
O7l5zRt4+D+FXU1b
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$1102632#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          PointSize[0.01]], 
         LineBox[CompressedData["
1:eJxdz02IVnUcxfF/k8QgEYMMIjHEbRhEZBimN5tevU32ZjZNVjZNo90sy2pS
aTkLuYTZZC9MZm8WciuzkhAJaTGE/BdDRLhoFS1cXCIiWrmIFhIS9fse4p5n
c54Pv+fcc58rt+/evKMnpXTxRSn9m51PsbeML+fW/xftSzhF5n24N3L0ZdwX
OfYK7o/cI6+KXHgVD5AHyCKyeg0PRp58Aw9Fzr+JV0dOLuA1kUNv4bWR9UE8
HLnsbTzC7w/hUX4vXxX57Tv4avrv4msil+RrIwfew9dFjn6A1/E8+Xr+z2E8
FrnhQ3xD5O8f4RvZP4Jv4v3lmyMvafAtkfvlWyOPyOsjj32My8ifcW1Ot0Vu
+oQ7bnAaj1zU3Zxu5/0+5Y7HcdoQOaG7Od0ROa07ntP9zsj3dTenuyKP6o5P
6X4376s7/kn3e7quzWlj5Fnd8S+63xt5QXe84ij3TV3XeKXu90VeoTse130i
stLdnO6PnNMdz+s+GfkrLs01Po8zXv4Z/Qfo4RJP4Nqc8ZT6myNn1Mevq48P
qY8X1X8w8oz6+Jz65owHj9F/KHIUl3gXrs0ZH1f/4cjT6uPLP6ePh3E2py2R
U7jEe9XH+9U3p0ciT6qPl9THg1/Qx2txmoqcxCWexrU5453qPxo5qz6eUx/X
6pvTdOSC+vig+vio+vgr9R+LPKE+/lp9/I36+LT6M12XeEl9c8Y/qL818oz6
W7v3Gv+mPv5D/W2Rf6mPe76kb864F6fHI5fjEvepj/vVN6cqcgAXuNDz8Bpc
4RE939zgddrDY7jFG7X/ROSE9s0l3qJ9c423a9+c8bT28Yz2t0du0z6e1T5+
UfvmGtfax/u0j+e1jw9o/8muC3xY+/iI9vEJ7Zsbc8antI8Xtf9U5Hfax99r
31zhH7WPz2of/6l9c2tOOyLPa99cmiv8t/bNjTmbW3xB+093XZhL3HOcfXNt
bszZ3OJlOD3TdYF7cWmuzDW+VPvmbG7xZdrf2XWB+7RvrvAK7Zsbc8b92jen
Z7suzKW5MtfmxpzNrTk9Z/t4pfbxKu2ba3NjzuYWD2j/eXa1by7Nlbk2N+Zs
bs1p1vbNJR7UPh7SPl6tfXM2t3hY+y90XZhLc4VHtG9uzNncmtOurgtzaa7M
tbkxZ3NrTrtt31yaK3NtbszZ3JrTnq77zMX//gcRTkCm
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Infected People (I)\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Ebola Epidermic Fitted Model of Infected Individuals in \
Guinea\"", TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Fitted Model\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Number of confirmed cases\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.851798364789748*^9, 3.8517984755741663`*^9, 3.8517985218413596`*^9, 
   3.851798569080779*^9, 3.851798619755863*^9, 3.8517986647597184`*^9, 
   3.8517987186599965`*^9, 3.85240655519882*^9, 3.852410550344115*^9, 
   3.8524112808578453`*^9, 3.852411555146497*^9, 3.8524120624647207`*^9, 
   3.8524129048677616`*^9, {3.852412948654258*^9, 3.8524129768065634`*^9}, {
   3.8524130088477125`*^9, 3.852413037803113*^9}, 3.8524130782358356`*^9, 
   3.8524136987620163`*^9, 3.8524826904026847`*^9, 3.8526405913906293`*^9, 
   3.8527381468357687`*^9, 3.852838013750653*^9, 3.8528403799446945`*^9, 
   3.8528404474669495`*^9, 3.854051582384385*^9, 3.854109803901153*^9, 
   3.854386318811125*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"543cbbf8-f0fe-4393-bf32-4080bc3d32db"]
}, Open  ]],

Cell[TextData[StyleBox["Obtain the residuals and plot them for each data \
point",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.8524067228163614`*^9},ExpressionUUID->"28c75fe5-734d-4dcf-a26c-\
aa105931fd98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"myfit2", "[", "\"\<FitResiduals\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.852406667241618*^9, 3.852406667541193*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"019462c3-670c-4b0c-9323-fb6a1fe43e10"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-306.48224708668795`, 695.3113838789479}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8524066742128315`*^9, 3.8524112825517087`*^9, 
  3.852411556778408*^9, 3.8524120641182237`*^9, 3.852413099536027*^9, 
  3.8524137007114964`*^9, 3.852482691733511*^9, 3.852640593266695*^9, 
  3.8527381485509524`*^9, 3.8528380156827707`*^9, 3.854051584195731*^9, 
  3.854109805623088*^9, 3.8543863189546824`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"700101c2-52f9-4188-bafb-6dd85e75e422"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myfit2", "[", "\"\<FitResiduals\>\"", "]"}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Filling", "->", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8524835765932956`*^9, 3.852483578301201*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"b96a1d78-a8ba-448f-9170-21fab32bcbb8"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
L2oRlE5X0pYWp1N/EdRvhnUNmZ1G/YbfjPgmdFEq9RdDP5Duro2lzytLMdQR
/TrtS0ih/mJYut9dlJ2cTP3FkKXy+wWbJlN/MTR7S98bf6D1sFps/H62gKfX
TaR+I38ioKViRTz1G/Ozar69sDSW+o11wB73thW3aX1smQZkX6xr1KOofxrk
yOr4UTWR1G940vk9hdn0eS0N9zo1emqfkdRv/Lz65KX2L63Ub/jx/l6L+g2i
fsM9S89mvGyhfmMd7DjRHL/Em/oNbzm49vOFdzzPATD8/YXD9/16wdNvWH21
snTSAI+l4dqSk3eXWT1WDTdVFpy+HeKxNh1yeU3f1YWjPNYNK1lWv7NjPBYl
MBbcv31k01iPLcY66VUlPvSraI9RApk4Meafv4uhfuP4pUF1MXlx1G/4xffz
7q+bQP2Gm9SvHv1qEvUb85VrmgsCJ1N/CfQzlZXz6pKovxTqX7z1xPPJ1G94
Zp+du36m9RVKoT33XPObeanUXwp98Y4d14+mUb+RTx6Ts+d6OvWXwrJh/6CW
X2dSfymMG/6tymdo/aaXQmnG2WmZ2dRfBqQudG7/51TqNxz1wecRm3KpvwzK
+CPOJ07mUX+Zcb6D7w/9ez71l6HaNfDG2Ddovagax+dtDfUOsFG/4ZqwzS11
ZL0M6k7VeT6ugPodkCMaf2xuJlsccB/q8tnfXIXUb+TXXHt7/IrWp4oD1bYh
sTEHzfWq8ZzUuCt0UXkR9Tugbd+YciSgmPoNzx29pst+svFc5d7W2S9hgrn+
LYd2/MXjq8bQ85ilHO7VNxquNJFRbqyfbw4bMI3Wz0o5ktbfy53+i7meLoda
9PbmjbWl1F+Otog82xfRZdRv5BlfXOtygayXw9f/1M7+DvP5rgK7Z7Ykhgla
r1sqIH2lfewKMoz8f7u8OmpgBfUb+UvIDDhMlhVwL5vx2t3JTuqvgHX61h8P
XSVrFUCR0/pBOD0f6Mbxw19KW1xlPj864StcKeM+I1ucOB6xad3P/vT8CCfc
exf9cWMBWXFCbVw9OGoHWTqxu7WqvOk2WXUiLqHOKy2Snk8043jxw5LGV8i6
E6E9rAuGNZnPLy60jV+7eGmvWR77uuCOzbSespMtLlRei+zltYtsdUGddfnq
03fJ5v8X/N8X2tOH2Ze5O7M/c29mC/OTzIHMA5gHMg9mfop5KLOVeTjzM8zB
zCHMI5ifZR7JHMo8ijmMOZw5gnk08xjmSGa0t2QWY1nOLKJYziyiWc4sxrGc
WYxnObOIYTmziGU5s4hjObOIZzmzmMByZjGR5cxiEsuZRQLLmUUiy5nFZJYz
i6T2BrNk1phFMptnlswas0hpbzBLZo1ZTGHzzJJZYxapbJ5ZMmvMIo3NM0tm
jVmks3lmyawxiww2zyyZNWaRyeaZJbPGLLLaG8ySWWMW2e0NZsmsMYupbJ5Z
MmvMIofNM0tmjVnksnlmyawxizw2zyyZNWaRz+aZJbPGLJT2tjCDWWGWzCqz
xqwzCxvrZwazwiyZVWaNWWcWBayfGcwKs2RWmTVmnVkUsn5mMCvMklll1ph1
ZmFn/cxgVpgls8qsMevMooj1M4NZYZbMKrPGrDOLYtbPDGaFWTKrzBqzziym
tbeFGcwKs2RWmTVmnVlMb28LM5gVZsmsMmvMOrMoYf3MYFaYJbPKrDHrzKKU
9TODWWGWzCqzxqwzizLWzwxmhVkyq8was84sHO1tYQazwiyZVWaNWWc2n9P/
288MZoVZMqvMGrPOLCpYPzOYFWbJrDJrzDqzcLJ+ZjArzJJZZdaYdWbham9f
Zguzlbljf0HH/oKO/QUd+ws69hfQfMf+go79BR37Czr2F3TsL/D0d+wv6Nhf
0LG/oGN/Qcf+Ak///9/9Bf8CUpuzZw==
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{260, 1}], LineBox[{261, 2}], LineBox[{262, 3}], 
       LineBox[{263, 4}], LineBox[{264, 5}], LineBox[{265, 6}], 
       LineBox[{267, 8}], LineBox[{322, 63}], LineBox[{323, 64}], 
       LineBox[{324, 65}], LineBox[{325, 66}], LineBox[{326, 67}], 
       LineBox[{327, 68}], LineBox[{328, 69}], LineBox[{329, 70}], 
       LineBox[{330, 71}], LineBox[{331, 72}], LineBox[{332, 73}], 
       LineBox[{333, 74}], LineBox[{334, 75}], LineBox[{335, 76}], 
       LineBox[{336, 77}], LineBox[{337, 78}], LineBox[{338, 79}], 
       LineBox[{339, 80}], LineBox[{340, 81}], LineBox[{341, 82}], 
       LineBox[{342, 83}], LineBox[{343, 84}], LineBox[{344, 85}], 
       LineBox[{345, 86}], LineBox[{346, 87}], LineBox[{347, 88}], 
       LineBox[{348, 89}], LineBox[{349, 90}], LineBox[{350, 91}], 
       LineBox[{351, 92}], LineBox[{352, 93}], LineBox[{353, 94}], 
       LineBox[{354, 95}], LineBox[{355, 96}], LineBox[{356, 97}], 
       LineBox[{357, 98}], LineBox[{358, 99}], LineBox[{359, 100}], 
       LineBox[{360, 101}], LineBox[{361, 102}], LineBox[{362, 103}], 
       LineBox[{363, 104}], LineBox[{364, 105}], LineBox[{365, 106}], 
       LineBox[{366, 107}], LineBox[{367, 108}], LineBox[{368, 109}], 
       LineBox[{369, 110}], LineBox[{370, 111}], LineBox[{371, 112}], 
       LineBox[{372, 113}], LineBox[{373, 114}], LineBox[{374, 115}], 
       LineBox[{375, 116}], LineBox[{376, 117}], LineBox[{377, 118}], 
       LineBox[{378, 119}], LineBox[{379, 120}], LineBox[{380, 121}], 
       LineBox[{381, 122}], LineBox[{382, 123}], LineBox[{383, 124}], 
       LineBox[{384, 125}], LineBox[{385, 126}], LineBox[{386, 127}], 
       LineBox[{387, 128}], LineBox[{388, 129}], LineBox[{389, 130}], 
       LineBox[{390, 131}], LineBox[{391, 132}], LineBox[{392, 133}], 
       LineBox[{393, 134}], LineBox[{394, 135}], LineBox[{395, 136}], 
       LineBox[{396, 137}], LineBox[{397, 138}], LineBox[{398, 139}], 
       LineBox[{399, 140}], LineBox[{400, 141}], LineBox[{401, 142}], 
       LineBox[{402, 143}], LineBox[{403, 144}], LineBox[{404, 145}], 
       LineBox[{405, 146}], LineBox[{406, 147}], LineBox[{407, 148}], 
       LineBox[{408, 149}], LineBox[{409, 150}], LineBox[{410, 151}], 
       LineBox[{411, 152}], LineBox[{412, 153}], LineBox[{413, 154}], 
       LineBox[{414, 155}], LineBox[{415, 156}], LineBox[{416, 157}], 
       LineBox[{417, 158}], LineBox[{418, 159}], LineBox[{419, 160}], 
       LineBox[{420, 161}], LineBox[{421, 162}], LineBox[{422, 163}], 
       LineBox[{423, 164}], LineBox[{424, 165}], LineBox[{425, 166}], 
       LineBox[{426, 167}], LineBox[{427, 168}], LineBox[{428, 169}], 
       LineBox[{429, 170}], LineBox[{430, 171}], LineBox[{431, 172}], 
       LineBox[{432, 173}], LineBox[{433, 174}], LineBox[{434, 175}], 
       LineBox[{435, 176}], LineBox[{436, 177}], LineBox[{437, 178}], 
       LineBox[{438, 179}], LineBox[{439, 180}], LineBox[{440, 181}], 
       LineBox[{441, 182}], LineBox[{442, 183}], LineBox[{443, 184}], 
       LineBox[{444, 185}], LineBox[{445, 186}], LineBox[{446, 187}], 
       LineBox[{447, 188}], LineBox[{448, 189}], LineBox[{449, 190}], 
       LineBox[{450, 191}], LineBox[{451, 192}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{266, 7}], LineBox[{268, 9}], LineBox[{269, 10}], 
       LineBox[{270, 11}], LineBox[{271, 12}], LineBox[{272, 13}], 
       LineBox[{273, 14}], LineBox[{274, 15}], LineBox[{275, 16}], 
       LineBox[{276, 17}], LineBox[{277, 18}], LineBox[{278, 19}], 
       LineBox[{279, 20}], LineBox[{280, 21}], LineBox[{281, 22}], 
       LineBox[{282, 23}], LineBox[{283, 24}], LineBox[{284, 25}], 
       LineBox[{285, 26}], LineBox[{286, 27}], LineBox[{287, 28}], 
       LineBox[{288, 29}], LineBox[{289, 30}], LineBox[{290, 31}], 
       LineBox[{291, 32}], LineBox[{292, 33}], LineBox[{293, 34}], 
       LineBox[{294, 35}], LineBox[{295, 36}], LineBox[{296, 37}], 
       LineBox[{297, 38}], LineBox[{298, 39}], LineBox[{299, 40}], 
       LineBox[{300, 41}], LineBox[{301, 42}], LineBox[{302, 43}], 
       LineBox[{303, 44}], LineBox[{304, 45}], LineBox[{305, 46}], 
       LineBox[{306, 47}], LineBox[{307, 48}], LineBox[{308, 49}], 
       LineBox[{309, 50}], LineBox[{310, 51}], LineBox[{311, 52}], 
       LineBox[{312, 53}], LineBox[{313, 54}], LineBox[{314, 55}], 
       LineBox[{315, 56}], LineBox[{316, 57}], LineBox[{317, 58}], 
       LineBox[{318, 59}], LineBox[{319, 60}], LineBox[{320, 61}], 
       LineBox[{321, 62}], LineBox[{452, 193}], LineBox[{453, 194}], 
       LineBox[{454, 195}], LineBox[{455, 196}], LineBox[{456, 197}], 
       LineBox[{457, 198}], LineBox[{458, 199}], LineBox[{459, 200}], 
       LineBox[{460, 201}], LineBox[{461, 202}], LineBox[{462, 203}], 
       LineBox[{463, 204}], LineBox[{464, 205}], LineBox[{465, 206}], 
       LineBox[{466, 207}], LineBox[{467, 208}], LineBox[{468, 209}], 
       LineBox[{469, 210}], LineBox[{470, 211}], LineBox[{471, 212}], 
       LineBox[{472, 213}], LineBox[{473, 214}], LineBox[{474, 215}], 
       LineBox[{475, 216}], LineBox[{476, 217}], LineBox[{477, 218}], 
       LineBox[{478, 219}], LineBox[{479, 220}], LineBox[{480, 221}], 
       LineBox[{481, 222}], LineBox[{482, 223}], LineBox[{483, 224}], 
       LineBox[{484, 225}], LineBox[{485, 226}], LineBox[{486, 227}], 
       LineBox[{487, 228}], LineBox[{488, 229}], LineBox[{489, 230}], 
       LineBox[{490, 231}], LineBox[{491, 232}], LineBox[{492, 233}], 
       LineBox[{493, 234}], LineBox[{494, 235}], LineBox[{495, 236}], 
       LineBox[{496, 237}], LineBox[{497, 238}], LineBox[{498, 239}], 
       LineBox[{499, 240}], LineBox[{500, 241}], LineBox[{501, 242}], 
       LineBox[{502, 243}], LineBox[{503, 244}], LineBox[{504, 245}], 
       LineBox[{505, 246}], LineBox[{506, 247}], LineBox[{507, 248}], 
       LineBox[{508, 249}], LineBox[{509, 250}], LineBox[{510, 251}], 
       LineBox[{511, 252}], LineBox[{512, 253}], LineBox[{513, 254}], 
       LineBox[{514, 255}], LineBox[{515, 256}], LineBox[{516, 257}], 
       LineBox[{517, 258}], LineBox[{518, 259}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwV01VjFgQAQNFvG7DRSIkgMZAuAQmluwTpzlEqsBHS3R1KS0l3d3e3CKJ0
Y9DdHB7O/Qc3PCKqWmRQIBAIkdDgQCCMmMQiNnGISzzik4BPSEgiEpOEpHxK
Mj4jOSn4nJSkIjVpCCct6fiC9GQgI5nITBayko3s5CAnX5KL3OThK/KSj/wU
4Gu+oSCFKEwRilKM4pSgJKUoTRnKUo7yVKAi31KJynxHFapSjerUoCa1qE0d
6lKP+jSgIY1oTBOaEkEzmtOClrTie37gR1rThrZEEkU72tOBjvxEJzrTha50
ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrH8zC+MYzwTmMgkJjOF
X5nKNKYzg5n8xixmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySl+5zR/cIaz/Mk5/uJv
znOBi1ziMle4yjWuc4Ob3OI2d/iHf/mP/7nLPe7zgIc84jFPeMoznvOCl7zi
NW94yzveB38cPRAIIpgQohGdGIQSRkw+AHBbg2A=
       "]]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-306.48224708668795`, 695.3113838789479}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8524835789158497`*^9, 3.8526405933812637`*^9, 
  3.8527381486797132`*^9, 3.8528380157862787`*^9, 3.8540515843213606`*^9, 
  3.8541098057589607`*^9, 3.8543863190483646`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"287eb9a3-120e-4987-ac6a-157d6eea3a09"]
}, Open  ]],

Cell[TextData[StyleBox["Estimating parameters using the number of confirmed \
deaths dataset",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.8517970749524865`*^9},ExpressionUUID->"d4ccb0e0-f7b0-4099-9660-\
f10758f56fa0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymodel", "[", 
   RowBox[{
    RowBox[{"alpha_", "?", "NumberQ"}], ",", 
    RowBox[{"lambda_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "I1", ",", "R1", ",", "t"}], "}"}], ",", 
    RowBox[{"First", "[", 
     RowBox[{"I1", "/.", " ", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"S", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", "alpha"}], "*", 
            RowBox[{"S", "[", "t", "]"}], "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"I1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"alpha", "*", 
             RowBox[{"S", "[", "t", "]"}], "*", 
             RowBox[{"I1", "[", "t", "]"}]}], "-", 
            RowBox[{"lambda", "*", 
             RowBox[{"I1", "[", "t", "]"}]}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"R1", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"lambda", "*", 
            RowBox[{"I1", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"S", "[", "0", "]"}], "\[Equal]", "2000"}], ",", 
          RowBox[{
           RowBox[{"I1", "[", "0", "]"}], "\[Equal]", "400"}], ",", 
          RowBox[{
           RowBox[{"R1", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", "I1", ",", "R1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "300"}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"myfit3", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"Guinea02", ",", 
     RowBox[{
      RowBox[{"mymodel", "[", 
       RowBox[{"alpha", ",", "lambda"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"alpha", ",", "0.000005"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"lambda", ",", "0.0000001"}], "}"}]}], "}"}], ",", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"myfit3", "[", "\"\<EstimatedVariance\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"myfit3", "[", "\"\<ParameterTable\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"plotfit01", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"myfit3", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "300"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Fitted Model\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Time(t)\>\"", ",", "\"\<Removed People(R)\>\""}], "}"}]}],
      ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Ebola Epidermic Fitted Model of Dead Individuals in \
Guinea\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"plotfit01", ",", "plot01"}], "]"}]}], "Input",
 CellChangeTimes->{{3.851797149537716*^9, 3.8517971533817005`*^9}, {
   3.8517972208737507`*^9, 3.851797224464018*^9}, {3.851798762630799*^9, 
   3.8517988041966047`*^9}, {3.851798841502663*^9, 3.8517988450035286`*^9}, {
   3.85179888184212*^9, 3.8517988823976445`*^9}, {3.8517989507793293`*^9, 
   3.8517989693313556`*^9}, {3.851799017118392*^9, 3.851799017572543*^9}, {
   3.8517990661955175`*^9, 3.85179906784429*^9}, {3.8517991006449585`*^9, 
   3.8517991016971345`*^9}, {3.851799146778802*^9, 3.8517991515945773`*^9}, {
   3.8517992005640416`*^9, 3.8517992026263423`*^9}, {3.8517992391223164`*^9, 
   3.851799242277364*^9}, {3.8517992803460164`*^9, 3.8517992807444787`*^9}, {
   3.851799366333395*^9, 3.851799369209629*^9}, {3.8517994044191885`*^9, 
   3.851799404877983*^9}, {3.8517994485949516`*^9, 3.8517994492303658`*^9}, {
   3.851799484926633*^9, 3.8517994858352966`*^9}, {3.852403984512742*^9, 
   3.8524040018026323`*^9}, {3.8524040447159185`*^9, 
   3.8524040466833925`*^9}, {3.8524068425476046`*^9, 3.8524068430387735`*^9}, 
   3.852406890746027*^9, {3.8524070022608347`*^9, 3.852407004950294*^9}, 
   3.8524100256370215`*^9, {3.8524100954520245`*^9, 3.8524100983563905`*^9}, {
   3.8524113168510094`*^9, 3.852411318799453*^9}, {3.852412166792426*^9, 
   3.8524122130584154`*^9}, {3.852412257371608*^9, 3.852412257987321*^9}, {
   3.8524123038648057`*^9, 3.8524123407223253`*^9}, {3.8524123867438927`*^9, 
   3.8524123881572924`*^9}, {3.8524124313239727`*^9, 
   3.8524124513018303`*^9}, {3.8524125635577574`*^9, 
   3.8524125653922977`*^9}, {3.852412600429153*^9, 3.852412604633845*^9}, {
   3.852412647680608*^9, 3.852412656414856*^9}, {3.852412691436754*^9, 
   3.8524126920624104`*^9}, {3.8524127262798524`*^9, 
   3.8524127269043036`*^9}, {3.852412804289679*^9, 3.852412837139557*^9}, {
   3.854056478866066*^9, 3.8540565020980387`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"3583a61c-ab20-4549-b718-f752cda90a8e"],

Cell[BoxData["20520.13270946633`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAOILlh8Udm564/hLVlwNRO+6+kULRPdkCRiC6GWXxa1B
9KJHAU4g+vPqbW4gmqlrgjeIdi9lDQbRLsxrwkG0846MGBD9O/JVAojmveid
A6KlbLcXgOh9i1vKQPT20EdVIDp7Jfvbh5vfOP45+UH5EZAWyy+f9xhIP7ue
5PoESOtt0o8H0S+6OAtA9EPpR/NA9Kr/y1eB6FuHK9eDaMmXK7aA6H8XHXaC
6BrfXftAdF1R83kQ/VZp/VUwn/npTRCtblH0AESfYw99CqJt9CNegugt1WGf
QXReuvt3EN2yLz35KcgdErLC7FveOEYJLdMNAdIsq7TPNwPpCo8Zk7cA6RVz
rHZvBdLzZA8qsW4Huuvx+hZ2IK0UktoJos1c/BQ4gLSEwsEJikCawc1xygog
DQDb+tsF
  "],
 CellLabel->"Out[67]=",ExpressionUUID->"d113e165-417f-41a9-a28b-ed71bd471802"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"alpha", "0.000017179489620994606`", "2.761161234515614`*^-7", 
      "62.218350041439635`", "5.788819953060267`*^-157"},
     {"lambda", "0.0009894038988662018`", "0.00003900706779937363`", 
      "25.36473400038773`", "6.341417607757628`*^-72"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAOILlh8Udm564/hLVlwNRO+6+kULRPdkCRiC6GWXxa1B
9KJHAU4g+vPqbW4gmqlrgjeIdi9lDQbRLsxrwkG0846MGBD9O/JVAojmveid
A6KlbLcXgOh9i1vKQPT20EdVIDp7Jfvbh5vfOP45+UH5EZAWyy+f9xhIP7ue
5PoESOtt0o8H0S+6OAtA9EPpR/NA9Kr/y1eB6FuHK9eDaMmXK7aA6H8XHXaC
6BrfXftAdF1R83kQ/VZp/VUwn/npTRCtblH0AESfYw99CqJt9CNegugt1WGf
QXReuvt3EN2yLz35KcgdErLC7FveOEYJLdMNAdIsq7TPNwPpCo8Zk7cA6RVz
rHZvBdLzZA8qsW4Huuvx+hZ2IK0UktoJos1c/BQ4gLSEwsEJikB6WUvKlBVA
GgDjrtwM
  "],
 CellLabel->"Out[68]=",ExpressionUUID->"2fa5e1e2-dc0f-4733-a6d9-119bdfeea253"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$1448214#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          PointSize[0.01]], 
         LineBox[CompressedData["
1:eJxdzj1sVXUcxvG/yMBk7tAYYjocTWMaQkxVxCtWOGLFt6oVq14V9IhFq1bB
hBhfovlrjDHGF9SqqFXPwNChA4NDx//YoQODgwPDGRgYGDo4MDgY/X2fmPPc
5bmf+7vPec71x04cPr4tpXT1VSn9m73P1ps1Xw78F+1bOJHvkDsip+RB5Pl3
8Rj39/DOyMH7eDyylivuH+AbItcznog8/SG+MXL0EZ6MPCfvilz8GO+OvCLf
xPt9gqciO/lmUp9bzLeGJz/j9z28n3wbz/8C743ckm/nfb/EQ/7/Fb6D9z+N
90UOv8Z3Rp6SpyMvfIPvilz5Fu+PXJcPRK4t45r8LjKb092RZ3XHw++5H4xc
wNmc7uH9dMf1D9xnIpdwNqd7+V13vKb7ochN3c3pvshLuuPtZ7jfHzmGM57T
/YHIed3N6cHIRne8oPtDkWd0x6u6z/ad8ZruD0f+rju+rPsjkX/pbk6Pkj9y
xxVOc+zh2pzxJi74svqPRQ5/oo9ncTYXPMLpcGSjPv5cfdyqjzfUfzzyovp4
/Gf65oLncZqPXMI13lDfXHBaIZ+IHMM1PoUzXsbFnJ6M/FN9PP4LfTyBizk9
FTmLazxSH/+tPt7+K/1RZIVrPIWzueCh+k9HzqiPR+rjI+qb0zORS+rjt9XH
K+rjVfWfjVxXHxf18Yb6eFP9I33X+Lz65oI79Y9GXlT/aP+e8Zb6+Ir6z0Xu
+I0+HuBsLngnTs9HTqiPp9XHM+qbUxM5hys80vPwAm7wop5vbvFJ7Zk7nLX/
QuSn2jfXeFn75oxb7eOz2jd3eFX7xyLXtI/PaR+va9+c8R/aNxd8Qfvm9GLf
Fe60jy9pH6eWfbwNt+aCr8GdOS1EDnBlrs2NOeNrtY+v0z4e1745HY+c0L65
xpPax7u0b27Nxdzh3dp/qe/KXOMp7ZuzuTUXc2dOL/ddmWtzY854j/bNBe/V
vjkt9l3hofbNjTnjfdo3F3NnTq9ETmvfXJsbcza35mLuzOlV28f7tW9uzNnc
4lr75s6cXuu7MtfmxpzxQe2bi7kzp6W+K3NtbvCM9s2tuZg7c3q97wof0r65
MWdzay7mzpze6Lsy1+bGnM2tuZg7czph++ba3JizuTUXc2dOJ/semKv//Q8o
aTLt
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time(t)\"", TraditionalForm], 
       FormBox["\"Removed People(R)\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0.}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Ebola Epidermic Fitted Model of Dead Individuals in Guinea\"",
        TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Fitted Model\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Number of confirmed deaths\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAOILlh8Udm564/hLVlwNRO+6+kULRPdkCRiC6GWXxa1B
9KJHAU4g+vPqbW4gmqlrgjeIdi9lDQbRLsxrwkG0846MGBD9O/JVAojmveid
A6KlbLcXgOh9i1vKQPT20EdVIDp7Jfvbh5vfOP45+UH5EZAWyy+f9xhIP7ue
5PoESOtt0o8H0S+6OAtA9EPpR/NA9Kr/y1eB6FuHK9eDaMmXK7aA6H8XHXaC
6BrfXftAdF1R83kQ/VZp/VUwn/npTRCtblH0AESfYw99CqJt9CNegugt1WGf
QXReuvt3EN2yLz35KcgdErLC7FveOEYJLdMNAdIsq7TPNwPpCo8Zk7cA6RVz
rHZvBdLzZA8qsW4Huuvx+hZ2IK0UktoJos1c/BQ4gLSEwsEJikDa43PxlBVA
GgDkIdws
  "],
 CellLabel->"Out[70]=",ExpressionUUID->"3d8dbf47-055e-4726-9b8d-b329fb367885"]
}, Open  ]],

Cell[TextData[StyleBox["Obtain the residuals and plot them for each data \
point",
 FontSize->18,
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{
  3.8524064306438403`*^9},ExpressionUUID->"41c44cdb-0bd8-44ce-be5b-\
da41dbe4c107"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"myfit3", "[", "\"\<FitResiduals\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8524064561330357`*^9, 3.852406456138996*^9}, {
  3.8524064904758286`*^9, 3.8524064910553994`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"1e7e1d9e-9818-489f-8ee4-d4250c15acd3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Z/KetffF1R8y1PBfBdS8IA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-697.6240242612254, 356.7634635947775}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.85240664820012*^9, 3.852411437613278*^9, 
  3.8524116438502626`*^9, 3.8524121534473624`*^9, 3.8524128666481404`*^9, 
  3.8524137249475374`*^9, 3.852482714355359*^9, 3.852640623709533*^9, 
  3.852738170848955*^9, 3.852838046546569*^9, 3.854051607854843*^9, 
  3.8541098318491683`*^9, 3.8543863397640767`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"7e735754-8d93-478f-b683-1a44c9b54528"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myfit3", "[", "\"\<FitResiduals\>\"", "]"}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Filling", "->", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.852483588500998*^9, 3.852483588891306*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"82531d61-0542-4694-96a4-e11bd3207e36"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt2vl7DfceB/AvuS0eQaglBJ1IkAZZRRIS+WSTVRbZTyQmm0Z2QohW86W1
r7WmtgzVUkulQoU2Oqilarsi9jJ2Giqo0Cru1z2fee5zPv/CjV/yvLznc96T
mcmcOef5WqcXjshqzhhrZcbY25/Gfw0+//0BI1X8D5g17Xpw64Mh6JZQZONw
vmr0ELQFnO7xoINbtD+6IyyaZvd4i6eeW8KF0iuNmZ390N0hynay1eOP3NAS
8ITqyUvf80X3AvmiZ5cPVujb2wI7Ovb6sd2XjfvF+gC/MVjek9YbjLYDLWpj
l5ByF7Q98FrrpDthduj+oDp0i8zbFox2gKjfs7d0Wq3bCTZZ7B98pjAa7Qwe
B+2WjfMagXaBZV8FjR/vPB33xxVeLShgr4/rHgiVtXs/7nIvBbd3AyX9nXVt
e49EDwJtynGf4y1Go92hY8TDTLfxuj3g59zSWdYXdHvCzsX+05+76h4MO3ee
9LNpmYMeAprljV871+WjvUCa4JsR+jIP7Q3hnx/xW1MzDj0U/B6eg12G8Wgf
aN5hi7dTVjEa4Gwsnxt7YoLRHOBGiz1LxlShmS94lPyesicI57kv3KpoeLog
R8/9wHLgyt7u4SWY+0GsVdGrN/P03B+8Gu9ddu+hz/tD9rawZIf5+v4EwJ+P
bwW6btPzALDr8GDB8of6/gUCm/zbw42f4O/DA+GzrtbnvpfHYj4MjrqfMHTY
UIT5MLD8Lvl0u3GFmAdByzODuv5SgceHC3/Gr979Tj+ewdDSPNz59dFszIPB
wswlY810/fiHQPlBZ8foTVmYh8CFxW1HV7TPwDwUFqm3z5iny5iHArcbkNdv
oH7+w0Bu9DufNjAB8zAA6wvnvw6MwzwclNyqspN2eP3xcOCjDo4N8davz+Gg
+ixZvafCG/PhwPoePn3AXr++I4CttvZcP8kK8wjgf2VXsxa2qjGPBPbmyxef
zfcymgvv+3jGH1cDMY8CJdZ8VeovoUZDFKgP7H5Legf//ngU8FNxLfotxlwV
jo8scX0UgfPRYDF04rdmC6JxPhrkRWX10vEonI8GaUr/kkNjY3A+GpTk2U5X
hibg/AhQdmWUx7oacH4ESH+2H9s3MgXnRf5Ns0MpHVJxfgQcndl2xdSeMs7H
QEOXwc7lM9EQAy++HnPn04A0nI+B6qMWhQmd0GoMyDYDAvuvTMf5WLD0f/yg
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
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{260, 1}], LineBox[{261, 2}], LineBox[{262, 3}], 
       LineBox[{263, 4}], LineBox[{264, 5}], LineBox[{265, 6}], 
       LineBox[{266, 7}], LineBox[{267, 8}], LineBox[{268, 9}], 
       LineBox[{277, 18}], LineBox[{278, 19}], LineBox[{320, 61}], 
       LineBox[{321, 62}], LineBox[{322, 63}], LineBox[{323, 64}], 
       LineBox[{324, 65}], LineBox[{325, 66}], LineBox[{326, 67}], 
       LineBox[{327, 68}], LineBox[{328, 69}], LineBox[{329, 70}], 
       LineBox[{330, 71}], LineBox[{331, 72}], LineBox[{332, 73}], 
       LineBox[{333, 74}], LineBox[{334, 75}], LineBox[{335, 76}], 
       LineBox[{336, 77}], LineBox[{337, 78}], LineBox[{338, 79}], 
       LineBox[{339, 80}], LineBox[{340, 81}], LineBox[{341, 82}], 
       LineBox[{342, 83}], LineBox[{343, 84}], LineBox[{344, 85}], 
       LineBox[{345, 86}], LineBox[{346, 87}], LineBox[{347, 88}], 
       LineBox[{348, 89}], LineBox[{349, 90}], LineBox[{350, 91}], 
       LineBox[{351, 92}], LineBox[{352, 93}], LineBox[{353, 94}], 
       LineBox[{354, 95}], LineBox[{355, 96}], LineBox[{356, 97}], 
       LineBox[{357, 98}], LineBox[{358, 99}], LineBox[{359, 100}], 
       LineBox[{360, 101}], LineBox[{361, 102}], LineBox[{362, 103}], 
       LineBox[{363, 104}], LineBox[{364, 105}], LineBox[{365, 106}], 
       LineBox[{366, 107}], LineBox[{367, 108}], LineBox[{368, 109}], 
       LineBox[{369, 110}], LineBox[{370, 111}], LineBox[{371, 112}], 
       LineBox[{372, 113}], LineBox[{373, 114}], LineBox[{374, 115}], 
       LineBox[{375, 116}], LineBox[{376, 117}], LineBox[{377, 118}], 
       LineBox[{378, 119}], LineBox[{379, 120}], LineBox[{380, 121}], 
       LineBox[{381, 122}], LineBox[{382, 123}], LineBox[{383, 124}], 
       LineBox[{384, 125}], LineBox[{385, 126}], LineBox[{386, 127}], 
       LineBox[{387, 128}], LineBox[{388, 129}], LineBox[{389, 130}], 
       LineBox[{390, 131}], LineBox[{391, 132}], LineBox[{392, 133}], 
       LineBox[{393, 134}], LineBox[{394, 135}], LineBox[{395, 136}], 
       LineBox[{396, 137}], LineBox[{397, 138}], LineBox[{398, 139}], 
       LineBox[{399, 140}], LineBox[{400, 141}], LineBox[{401, 142}], 
       LineBox[{402, 143}], LineBox[{403, 144}], LineBox[{404, 145}], 
       LineBox[{405, 146}], LineBox[{406, 147}], LineBox[{407, 148}], 
       LineBox[{408, 149}], LineBox[{409, 150}], LineBox[{410, 151}], 
       LineBox[{411, 152}], LineBox[{412, 153}], LineBox[{413, 154}], 
       LineBox[{414, 155}], LineBox[{415, 156}], LineBox[{416, 157}], 
       LineBox[{417, 158}], LineBox[{418, 159}], LineBox[{419, 160}], 
       LineBox[{420, 161}], LineBox[{421, 162}], LineBox[{422, 163}], 
       LineBox[{423, 164}], LineBox[{424, 165}], LineBox[{425, 166}], 
       LineBox[{426, 167}], LineBox[{427, 168}], LineBox[{428, 169}], 
       LineBox[{429, 170}], LineBox[{430, 171}], LineBox[{431, 172}], 
       LineBox[{432, 173}], LineBox[{433, 174}], LineBox[{434, 175}], 
       LineBox[{435, 176}], LineBox[{436, 177}], LineBox[{437, 178}], 
       LineBox[{438, 179}], LineBox[{439, 180}], LineBox[{440, 181}], 
       LineBox[{441, 182}], LineBox[{442, 183}], LineBox[{443, 184}], 
       LineBox[{444, 185}], LineBox[{445, 186}], LineBox[{446, 187}], 
       LineBox[{447, 188}], LineBox[{448, 189}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{269, 10}], LineBox[{270, 11}], LineBox[{271, 12}], 
       LineBox[{272, 13}], LineBox[{273, 14}], LineBox[{274, 15}], 
       LineBox[{275, 16}], LineBox[{276, 17}], LineBox[{279, 20}], 
       LineBox[{280, 21}], LineBox[{281, 22}], LineBox[{282, 23}], 
       LineBox[{283, 24}], LineBox[{284, 25}], LineBox[{285, 26}], 
       LineBox[{286, 27}], LineBox[{287, 28}], LineBox[{288, 29}], 
       LineBox[{289, 30}], LineBox[{290, 31}], LineBox[{291, 32}], 
       LineBox[{292, 33}], LineBox[{293, 34}], LineBox[{294, 35}], 
       LineBox[{295, 36}], LineBox[{296, 37}], LineBox[{297, 38}], 
       LineBox[{298, 39}], LineBox[{299, 40}], LineBox[{300, 41}], 
       LineBox[{301, 42}], LineBox[{302, 43}], LineBox[{303, 44}], 
       LineBox[{304, 45}], LineBox[{305, 46}], LineBox[{306, 47}], 
       LineBox[{307, 48}], LineBox[{308, 49}], LineBox[{309, 50}], 
       LineBox[{310, 51}], LineBox[{311, 52}], LineBox[{312, 53}], 
       LineBox[{313, 54}], LineBox[{314, 55}], LineBox[{315, 56}], 
       LineBox[{316, 57}], LineBox[{317, 58}], LineBox[{318, 59}], 
       LineBox[{319, 60}], LineBox[{449, 190}], LineBox[{450, 191}], 
       LineBox[{451, 192}], LineBox[{452, 193}], LineBox[{453, 194}], 
       LineBox[{454, 195}], LineBox[{455, 196}], LineBox[{456, 197}], 
       LineBox[{457, 198}], LineBox[{458, 199}], LineBox[{459, 200}], 
       LineBox[{460, 201}], LineBox[{461, 202}], LineBox[{462, 203}], 
       LineBox[{463, 204}], LineBox[{464, 205}], LineBox[{465, 206}], 
       LineBox[{466, 207}], LineBox[{467, 208}], LineBox[{468, 209}], 
       LineBox[{469, 210}], LineBox[{470, 211}], LineBox[{471, 212}], 
       LineBox[{472, 213}], LineBox[{473, 214}], LineBox[{474, 215}], 
       LineBox[{475, 216}], LineBox[{476, 217}], LineBox[{477, 218}], 
       LineBox[{478, 219}], LineBox[{479, 220}], LineBox[{480, 221}], 
       LineBox[{481, 222}], LineBox[{482, 223}], LineBox[{483, 224}], 
       LineBox[{484, 225}], LineBox[{485, 226}], LineBox[{486, 227}], 
       LineBox[{487, 228}], LineBox[{488, 229}], LineBox[{489, 230}], 
       LineBox[{490, 231}], LineBox[{491, 232}], LineBox[{492, 233}], 
       LineBox[{493, 234}], LineBox[{494, 235}], LineBox[{495, 236}], 
       LineBox[{496, 237}], LineBox[{497, 238}], LineBox[{498, 239}], 
       LineBox[{499, 240}], LineBox[{500, 241}], LineBox[{501, 242}], 
       LineBox[{502, 243}], LineBox[{503, 244}], LineBox[{504, 245}], 
       LineBox[{505, 246}], LineBox[{506, 247}], LineBox[{507, 248}], 
       LineBox[{508, 249}], LineBox[{509, 250}], LineBox[{510, 251}], 
       LineBox[{511, 252}], LineBox[{512, 253}], LineBox[{513, 254}], 
       LineBox[{514, 255}], LineBox[{515, 256}], LineBox[{516, 257}], 
       LineBox[{517, 258}], LineBox[{518, 259}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwV01VjFgQAQNFvG7DRSIkgMZAuAQmluwTpzlEqsBHS3R1KS0l3d3e3CKJ0
Y9DdHB7O/Qc3PCKqWmRQIBAIkdDgQCCMmMQiNnGISzzik4BPSEgiEpOEpHxK
Mj4jOSn4nJSkIjVpCCct6fiC9GQgI5nITBayko3s5CAnX5KL3OThK/KSj/wU
4Gu+oSCFKEwRilKM4pSgJKUoTRnKUo7yVKAi31KJynxHFapSjerUoCa1qE0d
6lKP+jSgIY1oTBOaEkEzmtOClrTie37gR1rThrZEEkU72tOBjvxEJzrTha50
ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrH8zC+MYzwTmMgkJjOF
X5nKNKYzg5n8xixmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2
s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySl+5zR/cIaz/Mk5/uJv
znOBi1ziMle4yjWuc4Ob3OI2d/iHf/mP/7nLPe7zgIc84jFPeMoznvOCl7zi
NW94yzveB38cPRAIIpgQohGdGIQSRkw+AHBbg2A=
       "]]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 259.}, {-697.6240242612254, 356.7634635947775}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.852483589437953*^9, 3.8526406238630877`*^9, 
  3.8527381709426703`*^9, 3.8528380466651464`*^9, 3.8540516079511776`*^9, 
  3.8541098320247045`*^9, 3.8543863398577623`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"433e4606-5080-43a6-8ede-c491d312a76b"]
}, Open  ]]
},
WindowSize->{1016.25, 612.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1724cf60-5634-4125-b314-dff711de31b9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 340, 6, 110, "Text",ExpressionUUID->"7ba343f2-8ae2-4fed-a062-1f4d06e95fb7"],
Cell[901, 28, 231, 5, 46, "Text",ExpressionUUID->"c31df4fb-613b-4246-b64b-a493f947cb91"],
Cell[1135, 35, 603, 13, 48, "Input",ExpressionUUID->"85179af6-167d-46eb-89a7-9c5b2c4279bd"],
Cell[1741, 50, 258, 5, 46, "Text",ExpressionUUID->"6546e104-644f-425b-b178-d37a92f099a5"],
Cell[CellGroupData[{
Cell[2024, 59, 1251, 24, 86, "Input",ExpressionUUID->"a322b909-a5f6-46e0-82c3-97cc8fd677a7"],
Cell[3278, 85, 188331, 3536, 650, "Output",ExpressionUUID->"73e1952b-6286-4c97-864b-f90409a56bef"]
}, Open  ]],
Cell[191624, 3624, 235, 5, 46, "Text",ExpressionUUID->"43302748-2d3f-4d5b-9334-13b3d9e59aa0"],
Cell[191862, 3631, 220, 5, 38, "Text",ExpressionUUID->"f29d5583-3df9-4db9-b5e6-c1ef840a3c17"],
Cell[192085, 3638, 787, 15, 28, "Input",ExpressionUUID->"cd7f2c64-3e29-404c-8811-4092b96b7a59"],
Cell[192875, 3655, 383, 7, 46, "Text",ExpressionUUID->"8c4a7ab9-9b4d-4afe-a457-0334a9a68c42"],
Cell[193261, 3664, 492, 8, 46, "Text",ExpressionUUID->"c8c8a6d9-e042-4aae-a88c-7bf3ae2c6593"],
Cell[193756, 3674, 590, 12, 28, "Input",ExpressionUUID->"2cff14ca-7191-4277-8014-fc019974eb06"],
Cell[194349, 3688, 242, 5, 38, "Text",ExpressionUUID->"f9ed35de-7af1-4686-a408-ece893628bfa"],
Cell[194594, 3695, 1013, 24, 67, "Input",ExpressionUUID->"cb09a9e2-f188-49a2-9bf9-46a4a07cfed1"],
Cell[CellGroupData[{
Cell[195632, 3723, 1179, 25, 48, "Input",ExpressionUUID->"0bdc1782-1603-462e-9ec1-8553e25a3766"],
Cell[196814, 3750, 9424, 197, 232, "Output",ExpressionUUID->"01d20e9a-74b5-4f7e-8a46-8daa513fa2da"]
}, Open  ]],
Cell[206253, 3950, 246, 5, 46, "Text",ExpressionUUID->"28f59219-f133-4627-931d-301fa192eb12"],
Cell[206502, 3957, 404, 10, 28, "Input",ExpressionUUID->"0c8257ea-1e0f-4b97-b5bf-a5d6d25f4c54"],
Cell[206909, 3969, 237, 5, 38, "Text",ExpressionUUID->"648521ed-b98a-4f53-923e-dd21b04d3207"],
Cell[207149, 3976, 840, 22, 67, "Input",ExpressionUUID->"cfb57c43-9f40-49c6-8ee0-88653424f573"],
Cell[CellGroupData[{
Cell[208014, 4002, 1122, 24, 67, "Input",ExpressionUUID->"679a0fe1-183e-46ac-8629-3c1138c511f7"],
Cell[209139, 4028, 9234, 192, 235, "Output",ExpressionUUID->"587068ad-b6d9-4fff-9bd3-8ceb9cef5c0d"]
}, Open  ]],
Cell[218388, 4223, 267, 6, 46, "Text",ExpressionUUID->"5817b39f-2953-4af3-b779-94a60f3500cb"],
Cell[218658, 4231, 398, 9, 28, "Input",ExpressionUUID->"14d0684b-ce61-4c00-92f1-53c4a94d0fa5"],
Cell[219059, 4242, 270, 6, 38, "Text",ExpressionUUID->"63313827-4790-405a-9f16-3d78c3b7a229"],
Cell[219332, 4250, 789, 21, 67, "Input",ExpressionUUID->"abebd655-e1fc-486b-b45d-7741b9868474"],
Cell[CellGroupData[{
Cell[220146, 4275, 983, 22, 67, "Input",ExpressionUUID->"7786023e-9c38-46bb-abb8-0d26c080c232"],
Cell[221132, 4299, 9227, 192, 236, "Output",ExpressionUUID->"170d975a-b735-477a-bdff-aaef87543e01"]
}, Open  ]],
Cell[230374, 4494, 241, 5, 61, "Text",ExpressionUUID->"3637b1ea-6283-45d2-8117-d43deb644311"],
Cell[230618, 4501, 315, 5, 46, "Text",ExpressionUUID->"8b8113a9-28ea-41da-921d-62dfc05c4f30"],
Cell[CellGroupData[{
Cell[230958, 4510, 1932, 48, 181, "Input",ExpressionUUID->"253871b8-a966-4329-a621-3432367c71cf"],
Cell[232893, 4560, 4509, 108, 55, "Output",ExpressionUUID->"6bd855e1-6fe6-456f-97a9-2daf784ba2c2"]
}, Open  ]],
Cell[237417, 4671, 275, 6, 46, "Text",ExpressionUUID->"6748380c-018e-4ab7-9d58-9f94569ec7eb"],
Cell[CellGroupData[{
Cell[237717, 4681, 4146, 101, 238, "Input",ExpressionUUID->"c58b79aa-d760-49cc-af7b-58aee72ba622"],
Cell[241866, 4784, 897, 12, 32, "Output",ExpressionUUID->"fbadaad0-3544-4e5a-9291-95cf8cf1012c"],
Cell[242766, 4798, 1723, 31, 65, "Output",ExpressionUUID->"2ceb7729-40c5-4277-a90d-aae9ada8fb22"],
Cell[244492, 4831, 22373, 432, 231, "Output",ExpressionUUID->"92225a3b-a77e-45a7-9da2-ac7ec2c61ee1"]
}, Open  ]],
Cell[266880, 5266, 240, 6, 46, "Text",ExpressionUUID->"e63ac284-f9a1-4773-884a-e3f44843a34f"],
Cell[CellGroupData[{
Cell[267145, 5276, 259, 4, 28, "Input",ExpressionUUID->"f67706de-4acb-4a7e-af4b-bae3a95d3527"],
Cell[267407, 5282, 5015, 97, 225, "Output",ExpressionUUID->"f99e73e4-b0d3-4999-9546-0db0db2e21bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272459, 5384, 318, 7, 48, "Input",ExpressionUUID->"4d944470-fa79-4131-b25f-f99fd2a52e6e"],
Cell[272780, 5393, 12530, 209, 225, "Output",ExpressionUUID->"ca11fb31-cb77-4262-b882-e6456817ce1b"]
}, Open  ]],
Cell[285325, 5605, 280, 6, 46, "Text",ExpressionUUID->"7e73e031-765c-4d5f-be61-2fcb0f176062"],
Cell[CellGroupData[{
Cell[285630, 5615, 4444, 105, 238, "Input",ExpressionUUID->"488fd2c9-3b8d-4652-870b-90f27e342a8b"],
Cell[290077, 5722, 1029, 14, 32, "Output",ExpressionUUID->"b43b947c-8136-4574-b6a6-3fdee6c6859b"],
Cell[291109, 5738, 1890, 34, 65, "Output",ExpressionUUID->"60fd3ea2-23c9-43f3-9970-2eb65f6c87db"],
Cell[293002, 5774, 19668, 387, 230, "Output",ExpressionUUID->"4c2df3e6-1ecf-485d-84d6-8ec9b5fd3f7b"]
}, Open  ]],
Cell[312685, 6164, 242, 6, 46, "Text",ExpressionUUID->"e9842f8c-9d2e-41fe-8862-7d461d5abffa"],
Cell[CellGroupData[{
Cell[312952, 6174, 236, 4, 28, "Input",ExpressionUUID->"d2048aa8-7268-4985-a131-178e41fe5c8e"],
Cell[313191, 6180, 4978, 97, 225, "Output",ExpressionUUID->"413ccd9c-49bd-4e6a-81de-f41822bc4457"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318206, 6282, 449, 9, 48, "Input",ExpressionUUID->"401e63bd-5ec4-4a68-9043-73216956d400"],
Cell[318658, 6293, 12700, 211, 225, "Output",ExpressionUUID->"30407a47-5aaa-41e9-a384-2ce1b1c79485"]
}, Open  ]],
Cell[331373, 6507, 219, 5, 38, "Text",ExpressionUUID->"8823fcef-8f8d-4d1c-a127-408836b17346"],
Cell[331595, 6514, 375, 9, 28, "Input",ExpressionUUID->"0bc4fe0f-09ab-4b16-8149-1753f3b19fbe"],
Cell[331973, 6525, 303, 7, 46, "Text",ExpressionUUID->"b77740e0-c020-4a5b-9d2f-71121a62bd73"],
Cell[332279, 6534, 217, 5, 46, "Text",ExpressionUUID->"19f3e50e-e38c-4e78-be51-fdd1d0689e35"],
Cell[332499, 6541, 404, 9, 28, "Input",ExpressionUUID->"1b2d1043-06a6-4532-b9ad-a8aeae591958"],
Cell[332906, 6552, 242, 5, 38, "Text",ExpressionUUID->"9fbdae80-f66b-4e89-977b-d48e425c5b85"],
Cell[333151, 6559, 844, 22, 67, "Input",ExpressionUUID->"d79dd98d-c03a-4393-a0b2-4b67573ab73e"],
Cell[CellGroupData[{
Cell[334020, 6585, 948, 22, 67, "Input",ExpressionUUID->"aa90ecc9-0591-4d16-99bd-5b58337eb32b"],
Cell[334971, 6609, 9187, 192, 238, "Output",ExpressionUUID->"726952e3-c10c-419c-b80d-a7da22073384"]
}, Open  ]],
Cell[344173, 6804, 218, 5, 46, "Text",ExpressionUUID->"382dff71-31f2-4624-a1da-bf988b59a547"],
Cell[344394, 6811, 412, 10, 28, "Input",ExpressionUUID->"60f64808-5fc6-4e8a-bea7-c97c1a235f3b"],
Cell[344809, 6823, 293, 6, 38, "Text",ExpressionUUID->"4e741f7e-31e5-4e19-a6cd-d632478bc91e"],
Cell[345105, 6831, 799, 21, 67, "Input",ExpressionUUID->"d405a4e1-ee31-4e9b-9151-e7ffd81a48f9"],
Cell[CellGroupData[{
Cell[345929, 6856, 946, 22, 67, "Input",ExpressionUUID->"cdf7e8fb-2747-49ad-84d8-14c28f772d7c"],
Cell[346878, 6880, 9183, 193, 235, "Output",ExpressionUUID->"dd6e34fc-0529-4436-ab51-18e22f757386"]
}, Open  ]],
Cell[356076, 7076, 240, 5, 46, "Text",ExpressionUUID->"ae652725-ea1f-4b29-926e-a2f2621a3f00"],
Cell[356319, 7083, 457, 10, 28, "Input",ExpressionUUID->"e725d101-581d-493f-93ba-37e3453a73fd"],
Cell[356779, 7095, 220, 5, 38, "Text",ExpressionUUID->"a1fd1177-21d6-40e8-945a-ef63532d7154"],
Cell[357002, 7102, 800, 21, 67, "Input",ExpressionUUID->"bb0d0d87-a6bd-42d9-bb68-8d471b11757a"],
Cell[CellGroupData[{
Cell[357827, 7127, 981, 22, 67, "Input",ExpressionUUID->"42ec6436-4725-459e-a464-bffdd3640707"],
Cell[358811, 7151, 9264, 194, 229, "Output",ExpressionUUID->"352a877c-3b23-4e82-bae3-c3671f40f86c"]
}, Open  ]],
Cell[368090, 7348, 215, 5, 61, "Text",ExpressionUUID->"5f2b64f2-cf80-4398-96a9-dd14bdb13806"],
Cell[368308, 7355, 193, 5, 46, "Text",ExpressionUUID->"8e115e1f-7331-4077-9950-a9e0f7671ca6"],
Cell[CellGroupData[{
Cell[368526, 7364, 1880, 47, 200, "Input",ExpressionUUID->"cd468ab1-bb7a-4f7a-9420-9b9081a331cf"],
Cell[370409, 7413, 4514, 108, 55, "Output",ExpressionUUID->"2d0162c2-4bf2-4738-acbf-195cce372afa"],
Cell[374926, 7523, 478, 7, 32, "Output",ExpressionUUID->"c75779e8-1c6c-4982-a44d-2ed2b8e78750"]
}, Open  ]],
Cell[375419, 7533, 251, 6, 46, "Text",ExpressionUUID->"8ca080c9-8dd7-44eb-9386-c0c2d910a0b3"],
Cell[CellGroupData[{
Cell[375695, 7543, 4142, 101, 238, "Input",ExpressionUUID->"d8083702-70eb-4e84-901a-fbd0434973b1"],
Cell[379840, 7646, 836, 12, 32, "Output",ExpressionUUID->"dfd485b3-b0a0-4e7e-bc91-a40dbaa81dfa"],
Cell[380679, 7660, 1657, 31, 65, "Output",ExpressionUUID->"e2e17078-7dd2-4aed-b6e4-6127ae5124ce"],
Cell[382339, 7693, 21854, 425, 233, "Output",ExpressionUUID->"543cbbf8-f0fe-4393-bf32-4080bc3d32db"]
}, Open  ]],
Cell[404208, 8121, 242, 6, 46, "Text",ExpressionUUID->"28c75fe5-734d-4dcf-a26c-aa105931fd98"],
Cell[CellGroupData[{
Cell[404475, 8131, 258, 4, 28, "Input",ExpressionUUID->"019462c3-670c-4b0c-9323-fb6a1fe43e10"],
Cell[404736, 8137, 5111, 98, 228, "Output",ExpressionUUID->"700101c2-52f9-4188-bafb-6dd85e75e422"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409884, 8240, 347, 7, 48, "Input",ExpressionUUID->"b96a1d78-a8ba-448f-9170-21fab32bcbb8"],
Cell[410234, 8249, 12615, 210, 228, "Output",ExpressionUUID->"287eb9a3-120e-4987-ac6a-157d6eea3a09"]
}, Open  ]],
Cell[422864, 8462, 254, 6, 46, "Text",ExpressionUUID->"d4ccb0e0-f7b0-4099-9660-f10758f56fa0"],
Cell[CellGroupData[{
Cell[423143, 8472, 5131, 115, 238, "Input",ExpressionUUID->"3583a61c-ab20-4549-b718-f752cda90a8e"],
Cell[428277, 8589, 603, 11, 32, "Output",ExpressionUUID->"d113e165-417f-41a9-a28b-ed71bd471802"],
Cell[428883, 8602, 1428, 30, 65, "Output",ExpressionUUID->"2fa5e1e2-dc0f-4733-a6d9-119bdfeea253"],
Cell[430314, 8634, 21610, 423, 230, "Output",ExpressionUUID->"3d8dbf47-055e-4726-9b8d-b329fb367885"]
}, Open  ]],
Cell[451939, 9060, 242, 6, 38, "Text",ExpressionUUID->"41c44cdb-0bd8-44ce-be5b-da41dbe4c107"],
Cell[CellGroupData[{
Cell[452206, 9070, 313, 5, 28, "Input",ExpressionUUID->"1e7e1d9e-9818-489f-8ee4-d4250c15acd3"],
Cell[452522, 9077, 5074, 98, 230, "Output",ExpressionUUID->"7e735754-8d93-478f-b683-1a44c9b54528"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457633, 9180, 345, 7, 48, "Input",ExpressionUUID->"82531d61-0542-4694-96a4-e11bd3207e36"],
Cell[457981, 9189, 12566, 209, 253, "Output",ExpressionUUID->"433e4606-5080-43a6-8ede-c491d312a76b"]
}, Open  ]]
}
]
*)

